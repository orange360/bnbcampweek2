{
	"id": "ceec8760ffd2698be97c96c5a846bbd7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"camp/SushiToken.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.6.0;\r\n\r\nimport \"./interface.sol\";\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor() public {\r\n    _name = \"SUshi Token\";\r\n    _symbol = \"sushi\";\r\n    _decimals = 18;\r\n    _totalSupply = 5201314 * 10**18;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view override returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view override returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view override returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view override returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view override returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view override returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view override returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n\r\n function burn(uint256 amount) public onlyOwner returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n function burnFrom(address account, uint256 amount) public onlyOwner returns (bool) {\r\n    _burnFrom(account, amount);\r\n    return true;\r\n  }\r\n\r\n  //   function _burnFrom(address account, uint256 amount) internal {\r\n  //   _burn(account, amount);\r\n  //   _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  // }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}\r\n"
			},
			"camp/interface.sol": {
				"content": "pragma solidity 0.6.0;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   * 返回账户余额\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   * 返回标记小数\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   * 返回合约token的符号\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  *  返回合约名称\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   * 获取该合约所有者的地址\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   * 返回指定账户地址在该合约中拥有的数量。\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * 将指定的数量转账给指定的目标地址。recipient为目标地址。\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   * 返回津贴享有者（spender）仍可从所有者（_owner）中提取的剩余令牌数量。默认为0\r\n   * 调用{approve}或{transferFrom}时，此值会更改\r\n   *\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   * 将指定的账户(amount)设置为津贴享有者，并设定最多提取数量。若成功则返回true\r\n   * 重要提示：使用这种方法更改津贴会带来风险\r\n   * 有人可能通过不幸的交易顺序使用旧的和新的津贴。\r\n   * 缓解这场竞争的一个可能解决方案则是，首先将支出者的津贴减少到0，并设置为之后的期望值。参考：https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   *\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * 指定发送者（sender）向接收者（recipient）转移指定数量的令牌。\r\n   * 需要注意的是，即使双方或任何一方的地址值是0，仍然被视为正常转移。\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   * 该函数为事件函数（event），必须在发生’from‘向’to‘转移令牌时触发。value代表令牌数量，可以为0.\r\n   * 创建新令牌的令牌契约应该在创建令牌时触发一个Transfer事件，_from地址设置为0x0。\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   * 该函数为事件函数（event），必须在approve函数被成功调用时触发，即：将某地址设置为津贴享用者，并成功返回true。\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n * 提供有关当前执行上下文的信息，包括事务的发送方及其数据。虽然这些通常是可用的。\r\n * 通过'msg.sender”和“msg.data’，它们不应该在这样一个直接访问方式，因为在处理GSN元交易时，账户发送和支付执行可能不是实际的发送者(就申请而言)。\r\n * 此合约只适用于中间的、类库的合约。\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying 空的内部构造函数，以防止错误部署\r\n  // an instance of this contract, which should be used via inheritance. 这个合约的实例，应该通过继承来使用。\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n * 在Solidity的算术操作上添加溢出检查的包装器。\r\n * solid中的算术运算在溢出时自动包装。这很容易导致bug，\r\n * 因为程序员通常假设溢出会引发错误，这是高级编程语言中的标准行为。\r\n * 当操作溢出时，' SafeMath '通过恢复事务来恢复这种直觉。\r\n * 使用这个库而不是未检查的操作可以消除整个类的bug，所以建议始终使用它。\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n * 提供基本访问控制机制的合同模块，\r\n * 有一个账户（所有者）可以被授予对特定功能的独占访问权。\r\n * 默认情况下，所有者帐户将是部署合同的帐户。稍后可以使用{transferOwnership}更改此设置。\r\n * 该模块通过继承使用。它将使修饰符“onlyOwner”可用，它可以应用于您的函数，以将它们的使用限制为所有者。\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"camp/SushiToken.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"camp/SushiToken.sol\":92:8510  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"camp/SushiToken.sol\":422:663  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"camp/SushiToken.sol\":422:663  constructor() public {\r... */\n  pop\n    /* \"camp/interface.sol\":12728:12745  address msgSender */\n  0x00\n    /* \"camp/interface.sol\":12748:12760  _msgSender() */\n  tag_7\n    /* \"camp/interface.sol\":12748:12758  _msgSender */\n  shl(0x20, tag_8)\n    /* \"camp/interface.sol\":12748:12760  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"camp/interface.sol\":12728:12760  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"camp/interface.sol\":12776:12785  msgSender */\n  dup1\n    /* \"camp/interface.sol\":12767:12773  _owner */\n  0x00\n  dup1\n    /* \"camp/interface.sol\":12767:12785  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"camp/interface.sol\":12830:12839  msgSender */\n  dup1\n    /* \"camp/interface.sol\":12797:12840  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"camp/interface.sol\":12826:12827  0 */\n  0x00\n    /* \"camp/interface.sol\":12797:12840  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"camp/interface.sol\":12697:12846  constructor () internal {\r... */\n  pop\n    /* \"camp/SushiToken.sol\":450:471  _name = \"SUshi Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x535573686920546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"camp/SushiToken.sol\":450:455  _name */\n  0x06\n    /* \"camp/SushiToken.sol\":450:471  _name = \"SUshi Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"camp/SushiToken.sol\":478:495  _symbol = \"sushi\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x7375736869000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"camp/SushiToken.sol\":478:485  _symbol */\n  0x05\n    /* \"camp/SushiToken.sol\":478:495  _symbol = \"sushi\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"camp/SushiToken.sol\":514:516  18 */\n  0x12\n    /* \"camp/SushiToken.sol\":502:511  _decimals */\n  0x04\n  0x00\n    /* \"camp/SushiToken.sol\":502:516  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"camp/SushiToken.sol\":538:554  5201314 * 10**18 */\n  0x044d6bcc03895b41480000\n    /* \"camp/SushiToken.sol\":523:535  _totalSupply */\n  0x03\n    /* \"camp/SushiToken.sol\":523:554  _totalSupply = 5201314 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"camp/SushiToken.sol\":585:597  _totalSupply */\n  sload(0x03)\n    /* \"camp/SushiToken.sol\":561:570  _balances */\n  0x01\n    /* \"camp/SushiToken.sol\":561:582  _balances[msg.sender] */\n  0x00\n    /* \"camp/SushiToken.sol\":571:581  msg.sender */\n  caller\n    /* \"camp/SushiToken.sol\":561:582  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"camp/SushiToken.sol\":561:597  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"camp/SushiToken.sol\":632:642  msg.sender */\n  caller\n    /* \"camp/SushiToken.sol\":611:657  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"camp/SushiToken.sol\":628:629  0 */\n  0x00\n    /* \"camp/SushiToken.sol\":611:657  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"camp/SushiToken.sol\":644:656  _totalSupply */\n  sload(0x03)\n    /* \"camp/SushiToken.sol\":611:657  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"camp/SushiToken.sol\":92:8510  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"camp/interface.sol\":5768:5860  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"camp/interface.sol\":5813:5828  address payable */\n  0x00\n    /* \"camp/interface.sol\":5844:5854  msg.sender */\n  caller\n    /* \"camp/interface.sol\":5837:5854  return msg.sender */\n  swap1\n  pop\n    /* \"camp/interface.sol\":5768:5860  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"camp/SushiToken.sol\":92:8510  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"camp/SushiToken.sol\":92:8510  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"camp/SushiToken.sol\":92:8510  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"camp/SushiToken.sol\":1160:1248  function name() external view override returns (string memory) {\r... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_26:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_26)\n    tag_28:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"camp/SushiToken.sol\":1160:1248  function name() external view override returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_29:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":2245:2398  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"camp/SushiToken.sol\":2245:2398  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":1304:1400  function totalSupply() external view override returns (uint256) {\r... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":2843:3144  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_36:\n        /* \"camp/SushiToken.sol\":2843:3144  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":870:958  function decimals() external view override returns (uint8) {\r... */\n    tag_7:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":3526:3726  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n        /* \"camp/SushiToken.sol\":3526:3726  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":4776:4896  function burn(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"camp/SushiToken.sol\":4776:4896  function burn(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":1454:1569  function balanceOf(address account) external view override returns (uint256) {\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"camp/SushiToken.sol\":1454:1569  function balanceOf(address account) external view override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/interface.sol\":13521:13651  function renounceOwnership() public onlyOwner {\r... */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"camp/SushiToken.sol\":4901:5041  function burnFrom(address account, uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n        /* \"camp/SushiToken.sol\":4901:5041  function burnFrom(address account, uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":723:811  function getOwner() external view override returns (address) {\r... */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/interface.sol\":12919:12992  function owner() public view returns (address) {\r... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":1015:1107  function symbol() external view override returns (string memory) {\r... */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_60:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_60)\n    tag_62:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"camp/SushiToken.sol\":1015:1107  function symbol() external view override returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_63:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":4649:4769  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n        /* \"camp/SushiToken.sol\":4649:4769  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":4198:4449  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_17:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"camp/SushiToken.sol\":4198:4449  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":1763:1922  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_18:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n        /* \"camp/SushiToken.sol\":1763:1922  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/SushiToken.sol\":1976:2115  function allowance(address owner, address spender) external view override returns (uint256) {\r... */\n    tag_19:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"camp/SushiToken.sol\":1976:2115  function allowance(address owner, address spender) external view override returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"camp/interface.sol\":13796:13899  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_20:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"camp/interface.sol\":13796:13899  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"camp/SushiToken.sol\":1160:1248  function name() external view override returns (string memory) {\r... */\n    tag_25:\n        /* \"camp/SushiToken.sol\":1208:1221  string memory */\n      0x60\n        /* \"camp/SushiToken.sol\":1237:1242  _name */\n      0x06\n        /* \"camp/SushiToken.sol\":1230:1242  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1160:1248  function name() external view override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":2245:2398  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_32:\n        /* \"camp/SushiToken.sol\":2322:2326  bool */\n      0x00\n        /* \"camp/SushiToken.sol\":2335:2374  _approve(_msgSender(), spender, amount) */\n      tag_84\n        /* \"camp/SushiToken.sol\":2344:2356  _msgSender() */\n      tag_85\n        /* \"camp/SushiToken.sol\":2344:2354  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":2344:2356  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"camp/SushiToken.sol\":2358:2365  spender */\n      dup5\n        /* \"camp/SushiToken.sol\":2367:2373  amount */\n      dup5\n        /* \"camp/SushiToken.sol\":2335:2343  _approve */\n      tag_87\n        /* \"camp/SushiToken.sol\":2335:2374  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_84:\n        /* \"camp/SushiToken.sol\":2388:2392  true */\n      0x01\n        /* \"camp/SushiToken.sol\":2381:2392  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":2245:2398  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":1304:1400  function totalSupply() external view override returns (uint256) {\r... */\n    tag_34:\n        /* \"camp/SushiToken.sol\":1359:1366  uint256 */\n      0x00\n        /* \"camp/SushiToken.sol\":1382:1394  _totalSupply */\n      sload(0x03)\n        /* \"camp/SushiToken.sol\":1375:1394  return _totalSupply */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1304:1400  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":2843:3144  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_37:\n        /* \"camp/SushiToken.sol\":2943:2947  bool */\n      0x00\n        /* \"camp/SushiToken.sol\":2956:2992  _transfer(sender, recipient, amount) */\n      tag_90\n        /* \"camp/SushiToken.sol\":2966:2972  sender */\n      dup5\n        /* \"camp/SushiToken.sol\":2974:2983  recipient */\n      dup5\n        /* \"camp/SushiToken.sol\":2985:2991  amount */\n      dup5\n        /* \"camp/SushiToken.sol\":2956:2965  _transfer */\n      tag_91\n        /* \"camp/SushiToken.sol\":2956:2992  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_90:\n        /* \"camp/SushiToken.sol\":2999:3120  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_92\n        /* \"camp/SushiToken.sol\":3008:3014  sender */\n      dup5\n        /* \"camp/SushiToken.sol\":3016:3028  _msgSender() */\n      tag_93\n        /* \"camp/SushiToken.sol\":3016:3026  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":3016:3028  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"camp/SushiToken.sol\":3030:3119  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_94\n        /* \"camp/SushiToken.sol\":3068:3074  amount */\n      dup6\n        /* \"camp/SushiToken.sol\":3030:3119  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"camp/SushiToken.sol\":3030:3041  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":3030:3049  _allowances[sender] */\n      0x00\n        /* \"camp/SushiToken.sol\":3042:3048  sender */\n      dup12\n        /* \"camp/SushiToken.sol\":3030:3049  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":3030:3063  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"camp/SushiToken.sol\":3050:3062  _msgSender() */\n      tag_95\n        /* \"camp/SushiToken.sol\":3050:3060  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":3050:3062  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"camp/SushiToken.sol\":3030:3063  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":3030:3067  _allowances[sender][_msgSender()].sub */\n      tag_96\n      swap1\n        /* \"camp/SushiToken.sol\":3030:3119  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"camp/SushiToken.sol\":2999:3007  _approve */\n      tag_87\n        /* \"camp/SushiToken.sol\":2999:3120  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_92:\n        /* \"camp/SushiToken.sol\":3134:3138  true */\n      0x01\n        /* \"camp/SushiToken.sol\":3127:3138  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":2843:3144  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":870:958  function decimals() external view override returns (uint8) {\r... */\n    tag_39:\n        /* \"camp/SushiToken.sol\":922:927  uint8 */\n      0x00\n        /* \"camp/SushiToken.sol\":943:952  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"camp/SushiToken.sol\":936:952  return _decimals */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":870:958  function decimals() external view override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":3526:3726  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_42:\n        /* \"camp/SushiToken.sol\":3606:3610  bool */\n      0x00\n        /* \"camp/SushiToken.sol\":3619:3702  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_99\n        /* \"camp/SushiToken.sol\":3628:3640  _msgSender() */\n      tag_100\n        /* \"camp/SushiToken.sol\":3628:3638  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":3628:3640  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"camp/SushiToken.sol\":3642:3649  spender */\n      dup5\n        /* \"camp/SushiToken.sol\":3651:3701  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_101\n        /* \"camp/SushiToken.sol\":3690:3700  addedValue */\n      dup6\n        /* \"camp/SushiToken.sol\":3651:3662  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":3651:3676  _allowances[_msgSender()] */\n      0x00\n        /* \"camp/SushiToken.sol\":3663:3675  _msgSender() */\n      tag_102\n        /* \"camp/SushiToken.sol\":3663:3673  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":3663:3675  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"camp/SushiToken.sol\":3651:3676  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":3651:3685  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"camp/SushiToken.sol\":3677:3684  spender */\n      dup10\n        /* \"camp/SushiToken.sol\":3651:3685  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":3651:3689  _allowances[_msgSender()][spender].add */\n      tag_103\n      swap1\n        /* \"camp/SushiToken.sol\":3651:3701  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"camp/SushiToken.sol\":3619:3627  _approve */\n      tag_87\n        /* \"camp/SushiToken.sol\":3619:3702  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_99:\n        /* \"camp/SushiToken.sol\":3716:3720  true */\n      0x01\n        /* \"camp/SushiToken.sol\":3709:3720  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":3526:3726  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":4776:4896  function burn(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_45:\n        /* \"camp/SushiToken.sol\":4832:4836  bool */\n      0x00\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      tag_105\n        /* \"camp/interface.sol\":13123:13133  _msgSender */\n      tag_86\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13119  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"camp/interface.sol\":13105:13172  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"camp/SushiToken.sol\":4845:4872  _burn(_msgSender(), amount) */\n      tag_108\n        /* \"camp/SushiToken.sol\":4851:4863  _msgSender() */\n      tag_109\n        /* \"camp/SushiToken.sol\":4851:4861  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":4851:4863  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"camp/SushiToken.sol\":4865:4871  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":4845:4850  _burn */\n      tag_110\n        /* \"camp/SushiToken.sol\":4845:4872  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_108:\n        /* \"camp/SushiToken.sol\":4886:4890  true */\n      0x01\n        /* \"camp/SushiToken.sol\":4879:4890  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":4776:4896  function burn(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":1454:1569  function balanceOf(address account) external view override returns (uint256) {\r... */\n    tag_48:\n        /* \"camp/SushiToken.sol\":1522:1529  uint256 */\n      0x00\n        /* \"camp/SushiToken.sol\":1545:1554  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":1545:1563  _balances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":1555:1562  account */\n      dup4\n        /* \"camp/SushiToken.sol\":1545:1563  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":1538:1563  return _balances[account] */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1454:1569  function balanceOf(address account) external view override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":13521:13651  function renounceOwnership() public onlyOwner {\r... */\n    tag_50:\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      tag_113\n        /* \"camp/interface.sol\":13123:13133  _msgSender */\n      tag_86\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13119  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"camp/interface.sol\":13105:13172  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"camp/interface.sol\":13616:13617  0 */\n      0x00\n        /* \"camp/interface.sol\":13579:13619  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13600:13606  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13579:13619  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/interface.sol\":13643:13644  0 */\n      0x00\n        /* \"camp/interface.sol\":13626:13632  _owner */\n      dup1\n      0x00\n        /* \"camp/interface.sol\":13626:13645  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"camp/interface.sol\":13521:13651  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"camp/SushiToken.sol\":4901:5041  function burnFrom(address account, uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_53:\n        /* \"camp/SushiToken.sol\":4978:4982  bool */\n      0x00\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      tag_117\n        /* \"camp/interface.sol\":13123:13133  _msgSender */\n      tag_86\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13119  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"camp/interface.sol\":13105:13172  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"camp/SushiToken.sol\":4991:5017  _burnFrom(account, amount) */\n      tag_120\n        /* \"camp/SushiToken.sol\":5001:5008  account */\n      dup4\n        /* \"camp/SushiToken.sol\":5010:5016  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":4991:5000  _burnFrom */\n      tag_121\n        /* \"camp/SushiToken.sol\":4991:5017  _burnFrom(account, amount) */\n      jump\t// in\n    tag_120:\n        /* \"camp/SushiToken.sol\":5031:5035  true */\n      0x01\n        /* \"camp/SushiToken.sol\":5024:5035  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":4901:5041  function burnFrom(address account, uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":723:811  function getOwner() external view override returns (address) {\r... */\n    tag_55:\n        /* \"camp/SushiToken.sol\":775:782  address */\n      0x00\n        /* \"camp/SushiToken.sol\":798:805  owner() */\n      tag_123\n        /* \"camp/SushiToken.sol\":798:803  owner */\n      tag_57\n        /* \"camp/SushiToken.sol\":798:805  owner() */\n      jump\t// in\n    tag_123:\n        /* \"camp/SushiToken.sol\":791:805  return owner() */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":723:811  function getOwner() external view override returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/interface.sol\":12919:12992  function owner() public view returns (address) {\r... */\n    tag_57:\n        /* \"camp/interface.sol\":12957:12964  address */\n      0x00\n        /* \"camp/interface.sol\":12980:12986  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":12973:12986  return _owner */\n      swap1\n      pop\n        /* \"camp/interface.sol\":12919:12992  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":1015:1107  function symbol() external view override returns (string memory) {\r... */\n    tag_59:\n        /* \"camp/SushiToken.sol\":1065:1078  string memory */\n      0x60\n        /* \"camp/SushiToken.sol\":1094:1101  _symbol */\n      0x05\n        /* \"camp/SushiToken.sol\":1087:1101  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1015:1107  function symbol() external view override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":4649:4769  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_66:\n        /* \"camp/SushiToken.sol\":4705:4709  bool */\n      0x00\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      tag_130\n        /* \"camp/interface.sol\":13123:13133  _msgSender */\n      tag_86\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13119  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"camp/interface.sol\":13105:13172  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"camp/SushiToken.sol\":4718:4745  _mint(_msgSender(), amount) */\n      tag_133\n        /* \"camp/SushiToken.sol\":4724:4736  _msgSender() */\n      tag_134\n        /* \"camp/SushiToken.sol\":4724:4734  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":4724:4736  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"camp/SushiToken.sol\":4738:4744  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":4718:4723  _mint */\n      tag_135\n        /* \"camp/SushiToken.sol\":4718:4745  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_133:\n        /* \"camp/SushiToken.sol\":4759:4763  true */\n      0x01\n        /* \"camp/SushiToken.sol\":4752:4763  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":4649:4769  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":4198:4449  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_69:\n        /* \"camp/SushiToken.sol\":4283:4287  bool */\n      0x00\n        /* \"camp/SushiToken.sol\":4296:4425  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_137\n        /* \"camp/SushiToken.sol\":4305:4317  _msgSender() */\n      tag_138\n        /* \"camp/SushiToken.sol\":4305:4315  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":4305:4317  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"camp/SushiToken.sol\":4319:4326  spender */\n      dup5\n        /* \"camp/SushiToken.sol\":4328:4424  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_139\n        /* \"camp/SushiToken.sol\":4367:4382  subtractedValue */\n      dup6\n        /* \"camp/SushiToken.sol\":4328:4424  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"camp/SushiToken.sol\":4328:4339  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":4328:4353  _allowances[_msgSender()] */\n      0x00\n        /* \"camp/SushiToken.sol\":4340:4352  _msgSender() */\n      tag_140\n        /* \"camp/SushiToken.sol\":4340:4350  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":4340:4352  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"camp/SushiToken.sol\":4328:4353  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":4328:4362  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"camp/SushiToken.sol\":4354:4361  spender */\n      dup11\n        /* \"camp/SushiToken.sol\":4328:4362  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":4328:4366  _allowances[_msgSender()][spender].sub */\n      tag_96\n      swap1\n        /* \"camp/SushiToken.sol\":4328:4424  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"camp/SushiToken.sol\":4296:4304  _approve */\n      tag_87\n        /* \"camp/SushiToken.sol\":4296:4425  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_137:\n        /* \"camp/SushiToken.sol\":4439:4443  true */\n      0x01\n        /* \"camp/SushiToken.sol\":4432:4443  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":4198:4449  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":1763:1922  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_72:\n        /* \"camp/SushiToken.sol\":1843:1847  bool */\n      0x00\n        /* \"camp/SushiToken.sol\":1856:1898  _transfer(_msgSender(), recipient, amount) */\n      tag_142\n        /* \"camp/SushiToken.sol\":1866:1878  _msgSender() */\n      tag_143\n        /* \"camp/SushiToken.sol\":1866:1876  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"camp/SushiToken.sol\":1880:1889  recipient */\n      dup5\n        /* \"camp/SushiToken.sol\":1891:1897  amount */\n      dup5\n        /* \"camp/SushiToken.sol\":1856:1865  _transfer */\n      tag_91\n        /* \"camp/SushiToken.sol\":1856:1898  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_142:\n        /* \"camp/SushiToken.sol\":1912:1916  true */\n      0x01\n        /* \"camp/SushiToken.sol\":1905:1916  return true */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1763:1922  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":1976:2115  function allowance(address owner, address spender) external view override returns (uint256) {\r... */\n    tag_75:\n        /* \"camp/SushiToken.sol\":2059:2066  uint256 */\n      0x00\n        /* \"camp/SushiToken.sol\":2082:2093  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":2082:2100  _allowances[owner] */\n      0x00\n        /* \"camp/SushiToken.sol\":2094:2099  owner */\n      dup5\n        /* \"camp/SushiToken.sol\":2082:2100  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":2082:2109  _allowances[owner][spender] */\n      0x00\n        /* \"camp/SushiToken.sol\":2101:2108  spender */\n      dup4\n        /* \"camp/SushiToken.sol\":2082:2109  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":2075:2109  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"camp/SushiToken.sol\":1976:2115  function allowance(address owner, address spender) external view override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":13796:13899  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_78:\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      tag_146\n        /* \"camp/interface.sol\":13123:13133  _msgSender */\n      tag_86\n        /* \"camp/interface.sol\":13123:13135  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13119  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":13113:13135  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"camp/interface.sol\":13105:13172  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"camp/interface.sol\":13865:13893  _transferOwnership(newOwner) */\n      tag_149\n        /* \"camp/interface.sol\":13884:13892  newOwner */\n      dup2\n        /* \"camp/interface.sol\":13865:13883  _transferOwnership */\n      tag_150\n        /* \"camp/interface.sol\":13865:13893  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"camp/interface.sol\":13796:13899  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":5768:5860  function _msgSender() internal view returns (address payable) {\r... */\n    tag_86:\n        /* \"camp/interface.sol\":5813:5828  address payable */\n      0x00\n        /* \"camp/interface.sol\":5844:5854  msg.sender */\n      caller\n        /* \"camp/interface.sol\":5837:5854  return msg.sender */\n      swap1\n      pop\n        /* \"camp/interface.sol\":5768:5860  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"camp/SushiToken.sol\":7793:8113  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_87:\n        /* \"camp/SushiToken.sol\":7900:7901  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":7883:7902  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":7883:7888  owner */\n      dup4\n        /* \"camp/SushiToken.sol\":7883:7902  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":7875:7943  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"camp/SushiToken.sol\":7977:7978  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":7958:7979  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":7958:7965  spender */\n      dup3\n        /* \"camp/SushiToken.sol\":7958:7979  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":7950:8018  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"camp/SushiToken.sol\":8057:8063  amount */\n      dup1\n        /* \"camp/SushiToken.sol\":8027:8038  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":8027:8045  _allowances[owner] */\n      0x00\n        /* \"camp/SushiToken.sol\":8039:8044  owner */\n      dup6\n        /* \"camp/SushiToken.sol\":8027:8045  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":8027:8054  _allowances[owner][spender] */\n      0x00\n        /* \"camp/SushiToken.sol\":8046:8053  spender */\n      dup5\n        /* \"camp/SushiToken.sol\":8027:8054  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":8027:8063  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":8091:8098  spender */\n      dup2\n        /* \"camp/SushiToken.sol\":8075:8107  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":8084:8089  owner */\n      dup4\n        /* \"camp/SushiToken.sol\":8075:8107  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"camp/SushiToken.sol\":8100:8106  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":8075:8107  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/SushiToken.sol\":7793:8113  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":5743:6192  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_91:\n        /* \"camp/SushiToken.sol\":5855:5856  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":5837:5857  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":5837:5843  sender */\n      dup4\n        /* \"camp/SushiToken.sol\":5837:5857  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":5829:5899  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"camp/SushiToken.sol\":5935:5936  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":5914:5937  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":5914:5923  recipient */\n      dup3\n        /* \"camp/SushiToken.sol\":5914:5937  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":5906:5977  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"camp/SushiToken.sol\":6006:6077  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_158\n        /* \"camp/SushiToken.sol\":6028:6034  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":6006:6077  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"camp/SushiToken.sol\":6006:6015  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":6006:6023  _balances[sender] */\n      0x00\n        /* \"camp/SushiToken.sol\":6016:6022  sender */\n      dup8\n        /* \"camp/SushiToken.sol\":6006:6023  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":6006:6027  _balances[sender].sub */\n      tag_96\n      swap1\n        /* \"camp/SushiToken.sol\":6006:6077  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"camp/SushiToken.sol\":5986:5995  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":5986:6003  _balances[sender] */\n      0x00\n        /* \"camp/SushiToken.sol\":5996:6002  sender */\n      dup6\n        /* \"camp/SushiToken.sol\":5986:6003  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":5986:6077  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":6107:6139  _balances[recipient].add(amount) */\n      tag_159\n        /* \"camp/SushiToken.sol\":6132:6138  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":6107:6116  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":6107:6127  _balances[recipient] */\n      0x00\n        /* \"camp/SushiToken.sol\":6117:6126  recipient */\n      dup6\n        /* \"camp/SushiToken.sol\":6107:6127  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":6107:6131  _balances[recipient].add */\n      tag_103\n      swap1\n        /* \"camp/SushiToken.sol\":6107:6139  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"camp/SushiToken.sol\":6084:6093  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":6084:6104  _balances[recipient] */\n      0x00\n        /* \"camp/SushiToken.sol\":6094:6103  recipient */\n      dup5\n        /* \"camp/SushiToken.sol\":6084:6104  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":6084:6139  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":6168:6177  recipient */\n      dup2\n        /* \"camp/SushiToken.sol\":6151:6186  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":6160:6166  sender */\n      dup4\n        /* \"camp/SushiToken.sol\":6151:6186  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"camp/SushiToken.sol\":6179:6185  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":6151:6186  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/SushiToken.sol\":5743:6192  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":8161:8339  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_96:\n        /* \"camp/interface.sol\":8247:8254  uint256 */\n      0x00\n        /* \"camp/interface.sol\":8276:8277  a */\n      dup4\n        /* \"camp/interface.sol\":8271:8272  b */\n      dup4\n        /* \"camp/interface.sol\":8271:8277  b <= a */\n      gt\n      iszero\n        /* \"camp/interface.sol\":8279:8291  errorMessage */\n      dup3\n        /* \"camp/interface.sol\":8263:8292  require(b <= a, errorMessage) */\n      swap1\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_162:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_162)\n    tag_164:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"camp/interface.sol\":8263:8292  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_165:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n      pop\n        /* \"camp/interface.sol\":8299:8308  uint256 c */\n      0x00\n        /* \"camp/interface.sol\":8315:8316  b */\n      dup4\n        /* \"camp/interface.sol\":8311:8312  a */\n      dup6\n        /* \"camp/interface.sol\":8311:8316  a - b */\n      sub\n        /* \"camp/interface.sol\":8299:8316  uint256 c = a - b */\n      swap1\n      pop\n        /* \"camp/interface.sol\":8332:8333  c */\n      dup1\n        /* \"camp/interface.sol\":8325:8333  return c */\n      swap2\n      pop\n      pop\n        /* \"camp/interface.sol\":8161:8339  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":7334:7501  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_103:\n        /* \"camp/interface.sol\":7392:7399  uint256 */\n      0x00\n        /* \"camp/interface.sol\":7408:7417  uint256 c */\n      dup1\n        /* \"camp/interface.sol\":7424:7425  b */\n      dup3\n        /* \"camp/interface.sol\":7420:7421  a */\n      dup5\n        /* \"camp/interface.sol\":7420:7425  a + b */\n      add\n        /* \"camp/interface.sol\":7408:7425  uint256 c = a + b */\n      swap1\n      pop\n        /* \"camp/interface.sol\":7445:7446  a */\n      dup4\n        /* \"camp/interface.sol\":7440:7441  c */\n      dup2\n        /* \"camp/interface.sol\":7440:7446  c >= a */\n      lt\n      iszero\n        /* \"camp/interface.sol\":7432:7478  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"camp/interface.sol\":7494:7495  c */\n      dup1\n        /* \"camp/interface.sol\":7487:7495  return c */\n      swap2\n      pop\n      pop\n        /* \"camp/interface.sol\":7334:7501  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":7051:7381  function _burn(address account, uint256 amount) internal {\r... */\n    tag_110:\n        /* \"camp/SushiToken.sol\":7142:7143  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":7123:7144  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":7123:7130  account */\n      dup3\n        /* \"camp/SushiToken.sol\":7123:7144  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":7115:7182  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"camp/SushiToken.sol\":7212:7280  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_170\n        /* \"camp/SushiToken.sol\":7235:7241  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":7212:7280  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"camp/SushiToken.sol\":7212:7221  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":7212:7230  _balances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":7222:7229  account */\n      dup7\n        /* \"camp/SushiToken.sol\":7212:7230  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":7212:7234  _balances[account].sub */\n      tag_96\n      swap1\n        /* \"camp/SushiToken.sol\":7212:7280  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"camp/SushiToken.sol\":7191:7200  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":7191:7209  _balances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":7201:7208  account */\n      dup5\n        /* \"camp/SushiToken.sol\":7191:7209  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":7191:7280  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":7302:7326  _totalSupply.sub(amount) */\n      tag_171\n        /* \"camp/SushiToken.sol\":7319:7325  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":7302:7314  _totalSupply */\n      sload(0x03)\n        /* \"camp/SushiToken.sol\":7302:7318  _totalSupply.sub */\n      tag_172\n      swap1\n        /* \"camp/SushiToken.sol\":7302:7326  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"camp/SushiToken.sol\":7287:7299  _totalSupply */\n      0x03\n        /* \"camp/SushiToken.sol\":7287:7326  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":7364:7365  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":7338:7375  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":7347:7354  account */\n      dup3\n        /* \"camp/SushiToken.sol\":7338:7375  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"camp/SushiToken.sol\":7368:7374  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":7338:7375  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/SushiToken.sol\":7051:7381  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":8285:8507  function _burnFrom(address account, uint256 amount) internal {\r... */\n    tag_121:\n        /* \"camp/SushiToken.sol\":8353:8375  _burn(account, amount) */\n      tag_174\n        /* \"camp/SushiToken.sol\":8359:8366  account */\n      dup3\n        /* \"camp/SushiToken.sol\":8368:8374  amount */\n      dup3\n        /* \"camp/SushiToken.sol\":8353:8358  _burn */\n      tag_110\n        /* \"camp/SushiToken.sol\":8353:8375  _burn(account, amount) */\n      jump\t// in\n    tag_174:\n        /* \"camp/SushiToken.sol\":8382:8501  _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\")) */\n      tag_175\n        /* \"camp/SushiToken.sol\":8391:8398  account */\n      dup3\n        /* \"camp/SushiToken.sol\":8400:8412  _msgSender() */\n      tag_176\n        /* \"camp/SushiToken.sol\":8400:8410  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":8400:8412  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"camp/SushiToken.sol\":8414:8500  _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\") */\n      tag_177\n        /* \"camp/SushiToken.sol\":8453:8459  amount */\n      dup5\n        /* \"camp/SushiToken.sol\":8414:8500  _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88\n      0x24\n      swap2\n      codecopy\n        /* \"camp/SushiToken.sol\":8414:8425  _allowances */\n      0x02\n        /* \"camp/SushiToken.sol\":8414:8434  _allowances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":8426:8433  account */\n      dup10\n        /* \"camp/SushiToken.sol\":8414:8434  _allowances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":8414:8448  _allowances[account][_msgSender()] */\n      0x00\n        /* \"camp/SushiToken.sol\":8435:8447  _msgSender() */\n      tag_178\n        /* \"camp/SushiToken.sol\":8435:8445  _msgSender */\n      tag_86\n        /* \"camp/SushiToken.sol\":8435:8447  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"camp/SushiToken.sol\":8414:8448  _allowances[account][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":8414:8452  _allowances[account][_msgSender()].sub */\n      tag_96\n      swap1\n        /* \"camp/SushiToken.sol\":8414:8500  _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"camp/SushiToken.sol\":8382:8390  _approve */\n      tag_87\n        /* \"camp/SushiToken.sol\":8382:8501  _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\")) */\n      jump\t// in\n    tag_175:\n        /* \"camp/SushiToken.sol\":8285:8507  function _burnFrom(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"camp/SushiToken.sol\":6453:6743  function _mint(address account, uint256 amount) internal {\r... */\n    tag_135:\n        /* \"camp/SushiToken.sol\":6544:6545  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":6525:6546  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":6525:6532  account */\n      dup3\n        /* \"camp/SushiToken.sol\":6525:6546  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/SushiToken.sol\":6517:6582  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"camp/SushiToken.sol\":6606:6630  _totalSupply.add(amount) */\n      tag_181\n        /* \"camp/SushiToken.sol\":6623:6629  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":6606:6618  _totalSupply */\n      sload(0x03)\n        /* \"camp/SushiToken.sol\":6606:6622  _totalSupply.add */\n      tag_103\n      swap1\n        /* \"camp/SushiToken.sol\":6606:6630  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"camp/SushiToken.sol\":6591:6603  _totalSupply */\n      0x03\n        /* \"camp/SushiToken.sol\":6591:6630  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":6658:6688  _balances[account].add(amount) */\n      tag_182\n        /* \"camp/SushiToken.sol\":6681:6687  amount */\n      dup2\n        /* \"camp/SushiToken.sol\":6658:6667  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":6658:6676  _balances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":6668:6675  account */\n      dup6\n        /* \"camp/SushiToken.sol\":6658:6676  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"camp/SushiToken.sol\":6658:6680  _balances[account].add */\n      tag_103\n      swap1\n        /* \"camp/SushiToken.sol\":6658:6688  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"camp/SushiToken.sol\":6637:6646  _balances */\n      0x01\n        /* \"camp/SushiToken.sol\":6637:6655  _balances[account] */\n      0x00\n        /* \"camp/SushiToken.sol\":6647:6654  account */\n      dup5\n        /* \"camp/SushiToken.sol\":6637:6655  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"camp/SushiToken.sol\":6637:6688  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"camp/SushiToken.sol\":6721:6728  account */\n      dup2\n        /* \"camp/SushiToken.sol\":6700:6737  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/SushiToken.sol\":6717:6718  0 */\n      0x00\n        /* \"camp/SushiToken.sol\":6700:6737  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"camp/SushiToken.sol\":6730:6736  amount */\n      dup4\n        /* \"camp/SushiToken.sol\":6700:6737  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/SushiToken.sol\":6453:6743  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":13997:14212  function _transferOwnership(address newOwner) internal {\r... */\n    tag_150:\n        /* \"camp/interface.sol\":14087:14088  0 */\n      0x00\n        /* \"camp/interface.sol\":14067:14089  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":14067:14075  newOwner */\n      dup2\n        /* \"camp/interface.sol\":14067:14089  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"camp/interface.sol\":14059:14132  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"camp/interface.sol\":14173:14181  newOwner */\n      dup1\n        /* \"camp/interface.sol\":14144:14182  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":14165:14171  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"camp/interface.sol\":14144:14182  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"camp/interface.sol\":14198:14206  newOwner */\n      dup1\n        /* \"camp/interface.sol\":14189:14195  _owner */\n      0x00\n      dup1\n        /* \"camp/interface.sol\":14189:14206  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"camp/interface.sol\":13997:14212  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"camp/interface.sol\":7756:7886  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_172:\n        /* \"camp/interface.sol\":7814:7821  uint256 */\n      0x00\n        /* \"camp/interface.sol\":7837:7880  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_186\n        /* \"camp/interface.sol\":7841:7842  a */\n      dup4\n        /* \"camp/interface.sol\":7844:7845  b */\n      dup4\n        /* \"camp/interface.sol\":7837:7880  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"camp/interface.sol\":7837:7840  sub */\n      tag_96\n        /* \"camp/interface.sol\":7837:7880  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_186:\n        /* \"camp/interface.sol\":7830:7880  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"camp/interface.sol\":7756:7886  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88 42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa26469706673582212202af3259105b477136c999940843c0b02805c631009908a0913764a53d893b5b864736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600b81526020017f535573686920546f6b656e000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600581526020017f7375736869000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a044d6bcc03895b41480000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b611ec680620003076000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806379cc6790116100a2578063a0712d6811610071578063a0712d6814610557578063a457c2d71461059d578063a9059cbb14610603578063dd62ed3e14610669578063f2fde38b146106e157610116565b806379cc6790146103da578063893d20e8146104405780638da5cb5b1461048a57806395d89b41146104d457610116565b8063313ce567116100e9578063313ce567146102a857806339509351146102cc57806342966c681461033257806370a0823114610378578063715018a6146103d057610116565b806306fdde031461011b578063095ea7b31461019e57806318160ddd1461020457806323b872dd14610222575b600080fd5b610123610725565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107c7565b604051808215151515815260200191505060405180910390f35b61020c6107e5565b6040518082815260200191505060405180910390f35b61028e6004803603606081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ef565b604051808215151515815260200191505060405180910390f35b6102b06108c8565b604051808260ff1660ff16815260200191505060405180910390f35b610318600480360360408110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108df565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561034857600080fd5b8101908080359060200190929190505050610992565b604051808215151515815260200191505060405180910390f35b6103ba6004803603602081101561038e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a77565b6040518082815260200191505060405180910390f35b6103d8610ac0565b005b610426600480360360408110156103f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c48565b604051808215151515815260200191505060405180910390f35b610448610d27565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610492610d36565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104dc610d5f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051c578082015181840152602081019050610501565b50505050905090810190601f1680156105495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105836004803603602081101561056d57600080fd5b8101908080359060200190929190505050610e01565b604051808215151515815260200191505060405180910390f35b6105e9600480360360408110156105b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ee6565b604051808215151515815260200191505060405180910390f35b61064f6004803603604081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb3565b604051808215151515815260200191505060405180910390f35b6106cb6004803603604081101561067f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b610723600480360360208110156106f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b5050505050905090565b60006107db6107d461112d565b8484611135565b6001905092915050565b6000600354905090565b60006107fc84848461132c565b6108bd8461080861112d565b6108b885604051806060016040528060288152602001611d7260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061086e61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006109886108ec61112d565b8461098385600260006108fd61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b611135565b6001905092915050565b600061099c61112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a6e610a6861112d565b8361172e565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ac861112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c5261112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1d83836118e8565b6001905092915050565b6000610d31610d36565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610df75780601f10610dcc57610100808354040283529160200191610df7565b820191906000526020600020905b815481529060010190602001808311610dda57829003601f168201915b5050505050905090565b6000610e0b61112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ecc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610edd610ed761112d565b836119b7565b60019050919050565b6000610fa9610ef361112d565b84610fa485604051806060016040528060258152602001611de36025913960026000610f1d61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b6001905092915050565b6000610fc7610fc061112d565b848461132c565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61106061112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61112a81611b74565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611d286024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e6f6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611d036025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611438576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611dc06023913960400191505060405180910390fd5b6114a481604051806060016040528060268152602001611d9a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611693576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561165857808201518184015260208101905061163d565b50505050905090810190601f1680156116855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e086021913960400191505060405180910390fd5b61182081604051806060016040528060228152602001611e2960229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061187881600354611cb890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6118f2828261172e565b6119b3826118fe61112d565b6119ae84604051806060016040528060248152602001611e4b60249139600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061196461112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a6f816003546116a690919063ffffffff16565b600381905550611ac781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611d4c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cfa83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115e6565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212202af3259105b477136c999940843c0b02805c631009908a0913764a53d893b5b864736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x535573686920546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7375736869000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x44D6BCC03895B41480000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EC6 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D4 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D0 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x148 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xAC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DC PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x501 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x549 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x723 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1058 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x792 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB PUSH2 0x7D4 PUSH2 0x112D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP5 DUP5 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x8BD DUP5 PUSH2 0x808 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x8B8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x86E PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH2 0x8EC PUSH2 0x112D JUMP JUMPDEST DUP5 PUSH2 0x983 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x8FD PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E PUSH2 0xA68 PUSH2 0x112D JUMP JUMPDEST DUP4 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D DUP4 DUP4 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xDF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDCC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDDA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDD PUSH2 0xED7 PUSH2 0x112D JUMP JUMPDEST DUP4 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA9 PUSH2 0xEF3 PUSH2 0x112D JUMP JUMPDEST DUP5 PUSH2 0xFA4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xF1D PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC7 PUSH2 0xFC0 PUSH2 0x112D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112A DUP2 PUSH2 0x1B74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D28 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E6F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D03 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DC0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D9A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1539 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1658 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x163D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1685 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E08 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1820 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E29 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1878 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1CB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x19B3 DUP3 PUSH2 0x18FE PUSH2 0x112D JUMP JUMPDEST PUSH2 0x19AE DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1964 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6F DUP2 PUSH1 0x3 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1AC7 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212202AF3259105B4 PUSH24 0x136C999940843C0B02805C631009908A0913764A53D893B5 0xB8 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "92:8418:0:-:0;;;422:241;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:241:0;12728:17:1;12748:12;:10;;;:12;;:::i;:::-;12728:32;;12776:9;12767:6;;:18;;;;;;;;;;;;;;;;;;12830:9;12797:43;;12826:1;12797:43;;;;;;;;;;;;12697:149;450:21:0;;;;;;;;;;;;;;;;;:5;:21;;;;;;;;;;;;:::i;:::-;;478:17;;;;;;;;;;;;;;;;;:7;:17;;;;;;;;;;;;:::i;:::-;;514:2;502:9;;:14;;;;;;;;;;;;;;;;;;538:16;523:12;:31;;;;585:12;;561:9;:21;571:10;561:21;;;;;;;;;;;;;;;:36;;;;632:10;611:46;;628:1;611:46;;;644:12;;611:46;;;;;;;;;;;;;;;;;;92:8418;;5768:92:1;5813:15;5844:10;5837:17;;5768:92;:::o;92:8418:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c806379cc6790116100a2578063a0712d6811610071578063a0712d6814610557578063a457c2d71461059d578063a9059cbb14610603578063dd62ed3e14610669578063f2fde38b146106e157610116565b806379cc6790146103da578063893d20e8146104405780638da5cb5b1461048a57806395d89b41146104d457610116565b8063313ce567116100e9578063313ce567146102a857806339509351146102cc57806342966c681461033257806370a0823114610378578063715018a6146103d057610116565b806306fdde031461011b578063095ea7b31461019e57806318160ddd1461020457806323b872dd14610222575b600080fd5b610123610725565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107c7565b604051808215151515815260200191505060405180910390f35b61020c6107e5565b6040518082815260200191505060405180910390f35b61028e6004803603606081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ef565b604051808215151515815260200191505060405180910390f35b6102b06108c8565b604051808260ff1660ff16815260200191505060405180910390f35b610318600480360360408110156102e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108df565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561034857600080fd5b8101908080359060200190929190505050610992565b604051808215151515815260200191505060405180910390f35b6103ba6004803603602081101561038e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a77565b6040518082815260200191505060405180910390f35b6103d8610ac0565b005b610426600480360360408110156103f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c48565b604051808215151515815260200191505060405180910390f35b610448610d27565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610492610d36565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104dc610d5f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051c578082015181840152602081019050610501565b50505050905090810190601f1680156105495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105836004803603602081101561056d57600080fd5b8101908080359060200190929190505050610e01565b604051808215151515815260200191505060405180910390f35b6105e9600480360360408110156105b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ee6565b604051808215151515815260200191505060405180910390f35b61064f6004803603604081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb3565b604051808215151515815260200191505060405180910390f35b6106cb6004803603604081101561067f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd1565b6040518082815260200191505060405180910390f35b610723600480360360208110156106f757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b5050505050905090565b60006107db6107d461112d565b8484611135565b6001905092915050565b6000600354905090565b60006107fc84848461132c565b6108bd8461080861112d565b6108b885604051806060016040528060288152602001611d7260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061086e61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006109886108ec61112d565b8461098385600260006108fd61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b611135565b6001905092915050565b600061099c61112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a6e610a6861112d565b8361172e565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ac861112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c5261112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1d83836118e8565b6001905092915050565b6000610d31610d36565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610df75780601f10610dcc57610100808354040283529160200191610df7565b820191906000526020600020905b815481529060010190602001808311610dda57829003601f168201915b5050505050905090565b6000610e0b61112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ecc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610edd610ed761112d565b836119b7565b60019050919050565b6000610fa9610ef361112d565b84610fa485604051806060016040528060258152602001611de36025913960026000610f1d61112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b6001905092915050565b6000610fc7610fc061112d565b848461132c565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61106061112d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61112a81611b74565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611d286024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611241576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611e6f6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113b2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611d036025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611438576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611dc06023913960400191505060405180910390fd5b6114a481604051806060016040528060268152602001611d9a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061153981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611693576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561165857808201518184015260208101905061163d565b50505050905090810190601f1680156116855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611e086021913960400191505060405180910390fd5b61182081604051806060016040528060228152602001611e2960229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061187881600354611cb890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6118f2828261172e565b6119b3826118fe61112d565b6119ae84604051806060016040528060248152602001611e4b60249139600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061196461112d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115e69092919063ffffffff16565b611135565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a6f816003546116a690919063ffffffff16565b600381905550611ac781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116a690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611d4c6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cfa83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506115e6565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212202af3259105b477136c999940843c0b02805c631009908a0913764a53d893b5b864736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D4 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D0 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x148 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xAC0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x426 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DC PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x501 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x549 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6CB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x723 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1058 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x792 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB PUSH2 0x7D4 PUSH2 0x112D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP5 DUP5 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x8BD DUP5 PUSH2 0x808 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x8B8 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x86E PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 PUSH2 0x8EC PUSH2 0x112D JUMP JUMPDEST DUP5 PUSH2 0x983 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x8FD PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E PUSH2 0xA68 PUSH2 0x112D JUMP JUMPDEST DUP4 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1D DUP4 DUP4 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD31 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xDF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDCC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDDA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xECC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDD PUSH2 0xED7 PUSH2 0x112D JUMP JUMPDEST DUP4 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA9 PUSH2 0xEF3 PUSH2 0x112D JUMP JUMPDEST DUP5 PUSH2 0xFA4 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE3 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xF1D PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC7 PUSH2 0xFC0 PUSH2 0x112D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112A DUP2 PUSH2 0x1B74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D28 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E6F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D03 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DC0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D9A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1539 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1693 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1658 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x163D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1685 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E08 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1820 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E29 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1878 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1CB8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x19B3 DUP3 PUSH2 0x18FE PUSH2 0x112D JUMP JUMPDEST PUSH2 0x19AE DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1964 PUSH2 0x112D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1135 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6F DUP2 PUSH1 0x3 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1AC7 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x16A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CFA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212202AF3259105B4 PUSH24 0x136C999940843C0B02805C631009908A0913764A53D893B5 0xB8 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "92:8418:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:8418:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1160:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2245:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1304:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2843:301;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2843:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3526:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3526:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4776:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4776:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1454:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1454:115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13521:130:1;;;:::i;:::-;;4901:140:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4901:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;723:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12919:73:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1015:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1015:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4649:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4649:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4198:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4198:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1763:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1763:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1976:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1976:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13796:103:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13796:103:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;1160:88:0;1208:13;1237:5;1230:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:88;:::o;2245:153::-;2322:4;2335:39;2344:12;:10;:12::i;:::-;2358:7;2367:6;2335:8;:39::i;:::-;2388:4;2381:11;;2245:153;;;;:::o;1304:96::-;1359:7;1382:12;;1375:19;;1304:96;:::o;2843:301::-;2943:4;2956:36;2966:6;2974:9;2985:6;2956:9;:36::i;:::-;2999:121;3008:6;3016:12;:10;:12::i;:::-;3030:89;3068:6;3030:89;;;;;;;;;;;;;;;;;:11;:19;3042:6;3030:19;;;;;;;;;;;;;;;:33;3050:12;:10;:12::i;:::-;3030:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;2999:8;:121::i;:::-;3134:4;3127:11;;2843:301;;;;;:::o;870:88::-;922:5;943:9;;;;;;;;;;;936:16;;870:88;:::o;3526:200::-;3606:4;3619:83;3628:12;:10;:12::i;:::-;3642:7;3651:50;3690:10;3651:11;:25;3663:12;:10;:12::i;:::-;3651:25;;;;;;;;;;;;;;;:34;3677:7;3651:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3619:8;:83::i;:::-;3716:4;3709:11;;3526:200;;;;:::o;4776:120::-;4832:4;13123:12:1;:10;:12::i;:::-;13113:22;;:6;;;;;;;;;;;:22;;;13105:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:27:0::1;4851:12;:10;:12::i;:::-;4865:6;4845:5;:27::i;:::-;4886:4;4879:11;;4776:120:::0;;;:::o;1454:115::-;1522:7;1545:9;:18;1555:7;1545:18;;;;;;;;;;;;;;;;1538:25;;1454:115;;;:::o;13521:130:1:-;13123:12;:10;:12::i;:::-;13113:22;;:6;;;;;;;;;;;:22;;;13105:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13616:1:::1;13579:40;;13600:6;::::0;::::1;;;;;;;;;13579:40;;;;;;;;;;;;13643:1;13626:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;13521:130::o:0;4901:140:0:-;4978:4;13123:12:1;:10;:12::i;:::-;13113:22;;:6;;;;;;;;;;;:22;;;13105:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4991:26:0::1;5001:7;5010:6;4991:9;:26::i;:::-;5031:4;5024:11;;4901:140:::0;;;;:::o;723:88::-;775:7;798;:5;:7::i;:::-;791:14;;723:88;:::o;12919:73:1:-;12957:7;12980:6;;;;;;;;;;;12973:13;;12919:73;:::o;1015:92:0:-;1065:13;1094:7;1087:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:92;:::o;4649:120::-;4705:4;13123:12:1;:10;:12::i;:::-;13113:22;;:6;;;;;;;;;;;:22;;;13105:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4718:27:0::1;4724:12;:10;:12::i;:::-;4738:6;4718:5;:27::i;:::-;4759:4;4752:11;;4649:120:::0;;;:::o;4198:251::-;4283:4;4296:129;4305:12;:10;:12::i;:::-;4319:7;4328:96;4367:15;4328:96;;;;;;;;;;;;;;;;;:11;:25;4340:12;:10;:12::i;:::-;4328:25;;;;;;;;;;;;;;;:34;4354:7;4328:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4296:8;:129::i;:::-;4439:4;4432:11;;4198:251;;;;:::o;1763:159::-;1843:4;1856:42;1866:12;:10;:12::i;:::-;1880:9;1891:6;1856:9;:42::i;:::-;1912:4;1905:11;;1763:159;;;;:::o;1976:139::-;2059:7;2082:11;:18;2094:5;2082:18;;;;;;;;;;;;;;;:27;2101:7;2082:27;;;;;;;;;;;;;;;;2075:34;;1976:139;;;;:::o;13796:103:1:-;13123:12;:10;:12::i;:::-;13113:22;;:6;;;;;;;;;;;:22;;;13105:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13865:28:::1;13884:8;13865:18;:28::i;:::-;13796:103:::0;:::o;5768:92::-;5813:15;5844:10;5837:17;;5768:92;:::o;7793:320:0:-;7900:1;7883:19;;:5;:19;;;;7875:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7977:1;7958:21;;:7;:21;;;;7950:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8057:6;8027:11;:18;8039:5;8027:18;;;;;;;;;;;;;;;:27;8046:7;8027:27;;;;;;;;;;;;;;;:36;;;;8091:7;8075:32;;8084:5;8075:32;;;8100:6;8075:32;;;;;;;;;;;;;;;;;;7793:320;;;:::o;5743:449::-;5855:1;5837:20;;:6;:20;;;;5829:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5935:1;5914:23;;:9;:23;;;;5906:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6006;6028:6;6006:71;;;;;;;;;;;;;;;;;:9;:17;6016:6;6006:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5986:9;:17;5996:6;5986:17;;;;;;;;;;;;;;;:91;;;;6107:32;6132:6;6107:9;:20;6117:9;6107:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6084:9;:20;6094:9;6084:20;;;;;;;;;;;;;;;:55;;;;6168:9;6151:35;;6160:6;6151:35;;;6179:6;6151:35;;;;;;;;;;;;;;;;;;5743:449;;;:::o;8161:178:1:-;8247:7;8276:1;8271;:6;;8279:12;8263:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8263:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8299:9;8315:1;8311;:5;8299:17;;8332:1;8325:8;;;8161:178;;;;;:::o;7334:167::-;7392:7;7408:9;7424:1;7420;:5;7408:17;;7445:1;7440;:6;;7432:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7494:1;7487:8;;;7334:167;;;;:::o;7051:330:0:-;7142:1;7123:21;;:7;:21;;;;7115:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7212:68;7235:6;7212:68;;;;;;;;;;;;;;;;;:9;:18;7222:7;7212:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;7191:9;:18;7201:7;7191:18;;;;;;;;;;;;;;;:89;;;;7302:24;7319:6;7302:12;;:16;;:24;;;;:::i;:::-;7287:12;:39;;;;7364:1;7338:37;;7347:7;7338:37;;;7368:6;7338:37;;;;;;;;;;;;;;;;;;7051:330;;:::o;8285:222::-;8353:22;8359:7;8368:6;8353:5;:22::i;:::-;8382:119;8391:7;8400:12;:10;:12::i;:::-;8414:86;8453:6;8414:86;;;;;;;;;;;;;;;;;:11;:20;8426:7;8414:20;;;;;;;;;;;;;;;:34;8435:12;:10;:12::i;:::-;8414:34;;;;;;;;;;;;;;;;:38;;:86;;;;;:::i;:::-;8382:8;:119::i;:::-;8285:222;;:::o;6453:290::-;6544:1;6525:21;;:7;:21;;;;6517:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6606:24;6623:6;6606:12;;:16;;:24;;;;:::i;:::-;6591:12;:39;;;;6658:30;6681:6;6658:9;:18;6668:7;6658:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6637:9;:18;6647:7;6637:18;;;;;;;;;;;;;;;:51;;;;6721:7;6700:37;;6717:1;6700:37;;;6730:6;6700:37;;;;;;;;;;;;;;;;;;6453:290;;:::o;13997:215:1:-;14087:1;14067:22;;:8;:22;;;;14059:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14173:8;14144:38;;14165:6;;;;;;;;;;;14144:38;;;;;;;;;;;;14198:8;14189:6;;:17;;;;;;;;;;;;;;;;;;13997:215;:::o;7756:130::-;7814:7;7837:43;7841:1;7844;7837:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;7830:50;;7756:130;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1575600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1141",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1128",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "MSTORE"
								},
								{
									"begin": 422,
									"end": 663,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 422,
									"end": 663,
									"name": "POP"
								},
								{
									"begin": 12728,
									"end": 12745,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 12748,
									"end": 12758,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 12748,
									"end": 12758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12748,
									"end": 12758,
									"name": "SHL"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "SHR"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 12748,
									"end": 12760,
									"name": "JUMPDEST"
								},
								{
									"begin": 12728,
									"end": 12760,
									"name": "SWAP1"
								},
								{
									"begin": 12728,
									"end": 12760,
									"name": "POP"
								},
								{
									"begin": 12776,
									"end": 12785,
									"name": "DUP1"
								},
								{
									"begin": 12767,
									"end": 12773,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12767,
									"end": 12773,
									"name": "DUP1"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "EXP"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "DUP2"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "SLOAD"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "DUP2"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "MUL"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "NOT"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "AND"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "SWAP1"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "DUP4"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "AND"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "MUL"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "OR"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "SWAP1"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "SSTORE"
								},
								{
									"begin": 12767,
									"end": 12785,
									"name": "POP"
								},
								{
									"begin": 12830,
									"end": 12839,
									"name": "DUP1"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "AND"
								},
								{
									"begin": 12826,
									"end": 12827,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "AND"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "MLOAD"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "MLOAD"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "DUP1"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "SWAP2"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "SUB"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "SWAP1"
								},
								{
									"begin": 12797,
									"end": 12840,
									"name": "LOG3"
								},
								{
									"begin": 12697,
									"end": 12846,
									"name": "POP"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "MLOAD"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "DUP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "ADD"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "MSTORE"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "DUP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "MSTORE"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "ADD"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "535573686920546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "MSTORE"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "POP"
								},
								{
									"begin": 450,
									"end": 455,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "DUP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "MLOAD"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "ADD"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP3"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP2"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "JUMPDEST"
								},
								{
									"begin": 450,
									"end": 471,
									"name": "POP"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "MLOAD"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "DUP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "MSTORE"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "DUP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "DUP2"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "MSTORE"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "7375736869000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "DUP2"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "MSTORE"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "POP"
								},
								{
									"begin": 478,
									"end": 485,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "DUP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "MLOAD"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP3"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP2"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP1"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "JUMPDEST"
								},
								{
									"begin": 478,
									"end": 495,
									"name": "POP"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 502,
									"end": 511,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 502,
									"end": 511,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "EXP"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "DUP2"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "SLOAD"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "DUP2"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "MUL"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "NOT"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "AND"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "DUP4"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "AND"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "MUL"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "OR"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "SSTORE"
								},
								{
									"begin": 502,
									"end": 516,
									"name": "POP"
								},
								{
									"begin": 538,
									"end": 554,
									"name": "PUSH",
									"value": "44D6BCC03895B41480000"
								},
								{
									"begin": 523,
									"end": 535,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 523,
									"end": 554,
									"name": "DUP2"
								},
								{
									"begin": 523,
									"end": 554,
									"name": "SWAP1"
								},
								{
									"begin": 523,
									"end": 554,
									"name": "SSTORE"
								},
								{
									"begin": 523,
									"end": 554,
									"name": "POP"
								},
								{
									"begin": 585,
									"end": 597,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 585,
									"end": 597,
									"name": "SLOAD"
								},
								{
									"begin": 561,
									"end": 570,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 571,
									"end": 581,
									"name": "CALLER"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "MSTORE"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "MSTORE"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "ADD"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 561,
									"end": 582,
									"name": "KECCAK256"
								},
								{
									"begin": 561,
									"end": 597,
									"name": "DUP2"
								},
								{
									"begin": 561,
									"end": 597,
									"name": "SWAP1"
								},
								{
									"begin": 561,
									"end": 597,
									"name": "SSTORE"
								},
								{
									"begin": 561,
									"end": 597,
									"name": "POP"
								},
								{
									"begin": 632,
									"end": 642,
									"name": "CALLER"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "AND"
								},
								{
									"begin": 628,
									"end": 629,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "AND"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 644,
									"end": 656,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 644,
									"end": 656,
									"name": "SLOAD"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "MLOAD"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "DUP1"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "DUP3"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "DUP2"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "MSTORE"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "ADD"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "SWAP2"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "POP"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "POP"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "MLOAD"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "DUP1"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "SWAP2"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "SUB"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "SWAP1"
								},
								{
									"begin": 611,
									"end": 657,
									"name": "LOG3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP"
								},
								{
									"begin": 5768,
									"end": 5860,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 5768,
									"end": 5860,
									"name": "JUMPDEST"
								},
								{
									"begin": 5813,
									"end": 5828,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5844,
									"end": 5854,
									"name": "CALLER"
								},
								{
									"begin": 5837,
									"end": 5854,
									"name": "SWAP1"
								},
								{
									"begin": 5837,
									"end": 5854,
									"name": "POP"
								},
								{
									"begin": 5768,
									"end": 5860,
									"name": "SWAP1"
								},
								{
									"begin": 5768,
									"end": 5860,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SLOAD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "AND"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ISZERO"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "MUL"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SUB"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "AND"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DIV"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "MSTORE"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "KECCAK256"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DIV"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "LT"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPI"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "MLOAD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "NOT"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "AND"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP4"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "OR"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP6"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SSTORE"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP6"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SSTORE"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ISZERO"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPI"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "GT"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ISZERO"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPI"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "MLOAD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SSTORE"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "POP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "POP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "POP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP3"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "GT"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ISZERO"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPI"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP2"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SSTORE"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "POP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "ADD"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "POP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "SWAP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "JUMPDEST"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "DUP1"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "CODECOPY"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 92,
									"end": 8510,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202af3259105b477136c999940843c0b02805c631009908a0913764a53d893b5b864736f6c63430006000033",
									".code": [
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "MSTORE"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "LT"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "SHR"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "79CC6790"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "GT"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "GT"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMP"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "79CC6790"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMP"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "GT"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMP"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "EQ"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 8510,
											"name": "REVERT"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP4"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP4"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ISZERO"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMPI"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP3"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP4"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "EXP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "NOT"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MSTORE"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "ADD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP3"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "MLOAD"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP2"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SUB"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "RETURN"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "JUMPDEST"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "AND"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "JUMPDEST"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "MLOAD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP3"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ISZERO"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ISZERO"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ISZERO"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ISZERO"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "MSTORE"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "MLOAD"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SUB"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "RETURN"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "RETURN"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP3"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "AND"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP3"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP3"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "MLOAD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP3"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ISZERO"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ISZERO"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ISZERO"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ISZERO"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "MSTORE"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "MLOAD"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP2"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SUB"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "RETURN"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "MLOAD"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "DUP3"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "MSTORE"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "MLOAD"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "DUP1"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "SWAP2"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "SUB"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "RETURN"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "JUMPDEST"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ADD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "AND"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ADD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP3"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ADD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP3"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "JUMPDEST"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "MLOAD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP3"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ISZERO"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ISZERO"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ISZERO"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ISZERO"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "MSTORE"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "ADD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "MLOAD"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "DUP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SUB"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP1"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "RETURN"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "JUMPDEST"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ADD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ADD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP3"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "JUMPDEST"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "MLOAD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP3"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ISZERO"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "MSTORE"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "ADD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "MLOAD"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "DUP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SUB"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "RETURN"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "JUMPDEST"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "ADD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "ADD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP3"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "JUMPDEST"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "MLOAD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP3"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "MSTORE"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "ADD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "MLOAD"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SUB"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "RETURN"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "JUMPDEST"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "JUMPDEST"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "STOP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "JUMPDEST"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ADD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "AND"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ADD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP3"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ADD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP3"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "JUMPDEST"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "MLOAD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP3"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ISZERO"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ISZERO"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ISZERO"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ISZERO"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "MSTORE"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "ADD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "MLOAD"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "DUP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SUB"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP1"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "RETURN"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "DUP3"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "MSTORE"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "MLOAD"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "SWAP2"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "SUB"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "RETURN"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "JUMPDEST"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "JUMPDEST"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "MLOAD"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "DUP1"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "DUP3"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "AND"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "AND"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "DUP2"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "MSTORE"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "ADD"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "SWAP2"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "POP"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "POP"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "MLOAD"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "DUP1"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "SWAP2"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "SUB"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "SWAP1"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "RETURN"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ISZERO"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMPI"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "EXP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "NOT"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP3"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "RETURN"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ADD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ADD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP3"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "MLOAD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP3"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ISZERO"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ISZERO"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ISZERO"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ISZERO"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "MSTORE"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "ADD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "MLOAD"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "DUP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SUB"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "RETURN"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "AND"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP3"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP3"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "JUMPDEST"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "MLOAD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP3"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ISZERO"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ISZERO"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ISZERO"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ISZERO"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "MSTORE"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "MLOAD"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SUB"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "RETURN"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP3"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP3"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP3"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ISZERO"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ISZERO"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ISZERO"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ISZERO"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "MSTORE"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "MLOAD"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "DUP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SUB"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "RETURN"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP3"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP3"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "JUMPDEST"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "MLOAD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP3"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "MSTORE"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "ADD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "MLOAD"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SUB"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "RETURN"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "JUMPDEST"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "DUP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "DUP2"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "ADD"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "DUP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "DUP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "AND"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "ADD"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP3"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP2"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "SWAP1"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "JUMPDEST"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "STOP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMPDEST"
										},
										{
											"begin": 1208,
											"end": 1221,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1237,
											"end": 1242,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SLOAD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DIV"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DIV"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MLOAD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP3"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SLOAD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DIV"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPI"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "LT"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPI"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SLOAD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DIV"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MUL"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "KECCAK256"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SLOAD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "GT"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPI"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1160,
											"end": 1248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "JUMPDEST"
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "JUMPDEST"
										},
										{
											"begin": 2358,
											"end": 2365,
											"name": "DUP5"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP5"
										},
										{
											"begin": 2335,
											"end": 2343,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST"
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "SWAP1"
										},
										{
											"begin": 2381,
											"end": 2392,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "POP"
										},
										{
											"begin": 2245,
											"end": 2398,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "SLOAD"
										},
										{
											"begin": 1375,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1394,
											"name": "POP"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1304,
											"end": 1400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2992,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP5"
										},
										{
											"begin": 2974,
											"end": 2983,
											"name": "DUP5"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP5"
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2956,
											"end": 2992,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 2992,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2956,
											"end": 2992,
											"name": "JUMPDEST"
										},
										{
											"begin": 2999,
											"end": 3120,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP5"
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "JUMPDEST"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "DUP6"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "MLOAD"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "DUP1"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "DUP2"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "CODECOPY"
										},
										{
											"begin": 3030,
											"end": 3041,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP12"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "DUP2"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SWAP1"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "DUP2"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "KECCAK256"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "JUMPDEST"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "DUP2"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "SWAP1"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "DUP2"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "MSTORE"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "ADD"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "KECCAK256"
										},
										{
											"begin": 3030,
											"end": 3063,
											"name": "SLOAD"
										},
										{
											"begin": 3030,
											"end": 3067,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 3030,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "SWAP3"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "SWAP2"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "SWAP1"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "AND"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 3030,
											"end": 3119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2999,
											"end": 3007,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2999,
											"end": 3120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3120,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2999,
											"end": 3120,
											"name": "JUMPDEST"
										},
										{
											"begin": 3134,
											"end": 3138,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3127,
											"end": 3138,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3138,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP4"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "SWAP3"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "POP"
										},
										{
											"begin": 2843,
											"end": 3144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "JUMPDEST"
										},
										{
											"begin": 922,
											"end": 927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "SLOAD"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "EXP"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DIV"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP1"
										},
										{
											"begin": 936,
											"end": 952,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 958,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "JUMPDEST"
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3702,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3628,
											"end": 3638,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "JUMPDEST"
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "DUP5"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP6"
										},
										{
											"begin": 3651,
											"end": 3662,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 3663,
											"end": 3673,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "JUMPDEST"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "AND"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "AND"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "MSTORE"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "DUP2"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "MSTORE"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "ADD"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3676,
											"name": "KECCAK256"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "DUP10"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "AND"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "AND"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "DUP2"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "MSTORE"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "ADD"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "DUP2"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "MSTORE"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "ADD"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "KECCAK256"
										},
										{
											"begin": 3651,
											"end": 3685,
											"name": "SLOAD"
										},
										{
											"begin": 3651,
											"end": 3689,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 3651,
											"end": 3689,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "SWAP2"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "SWAP1"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "AND"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3651,
											"end": 3701,
											"name": "JUMPDEST"
										},
										{
											"begin": 3619,
											"end": 3627,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3619,
											"end": 3702,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3702,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3619,
											"end": 3702,
											"name": "JUMPDEST"
										},
										{
											"begin": 3716,
											"end": 3720,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3709,
											"end": 3720,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3720,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP3"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "SWAP2"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "POP"
										},
										{
											"begin": 3526,
											"end": 3726,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "JUMPDEST"
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMPDEST"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SLOAD"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "EXP"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DIV"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "EQ"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "REVERT"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST"
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 4851,
											"end": 4861,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "JUMPDEST"
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP4"
										},
										{
											"begin": 4845,
											"end": 4850,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 4845,
											"end": 4872,
											"name": "JUMPDEST"
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4879,
											"end": 4890,
											"name": "SWAP1"
										},
										{
											"begin": 4879,
											"end": 4890,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP2"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "SWAP1"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "POP"
										},
										{
											"begin": 4776,
											"end": 4896,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "JUMPDEST"
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "DUP4"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "AND"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "AND"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "SWAP1"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "DUP2"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "MSTORE"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "ADD"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "KECCAK256"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "SLOAD"
										},
										{
											"begin": 1538,
											"end": 1563,
											"name": "SWAP1"
										},
										{
											"begin": 1538,
											"end": 1563,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP2"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "POP"
										},
										{
											"begin": 1454,
											"end": 1569,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMPDEST"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SLOAD"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "EXP"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DIV"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "EQ"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "REVERT"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST"
										},
										{
											"begin": 13616,
											"end": 13617,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "AND"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "DUP1"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "SWAP1"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "SLOAD"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "SWAP1"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "EXP"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "SWAP1"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "DIV"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "AND"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "AND"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "MLOAD"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "MLOAD"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "DUP1"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "SWAP2"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "SUB"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "SWAP1"
										},
										{
											"begin": 13579,
											"end": 13619,
											"name": "LOG3"
										},
										{
											"begin": 13643,
											"end": 13644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13626,
											"end": 13632,
											"name": "DUP1"
										},
										{
											"begin": 13626,
											"end": 13632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "EXP"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "DUP2"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SLOAD"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "DUP2"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "MUL"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "NOT"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "AND"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SWAP1"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "DUP4"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "AND"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "MUL"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "OR"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SWAP1"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "SSTORE"
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "POP"
										},
										{
											"begin": 13521,
											"end": 13651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "JUMPDEST"
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMPDEST"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SLOAD"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "EXP"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DIV"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "EQ"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "REVERT"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST"
										},
										{
											"begin": 4991,
											"end": 5017,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP4"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP4"
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4991,
											"end": 5017,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4991,
											"end": 5017,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 4991,
											"end": 5017,
											"name": "JUMPDEST"
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5024,
											"end": 5035,
											"name": "SWAP1"
										},
										{
											"begin": 5024,
											"end": 5035,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP3"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "SWAP2"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "POP"
										},
										{
											"begin": 4901,
											"end": 5041,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "JUMPDEST"
										},
										{
											"begin": 775,
											"end": 782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 798,
											"end": 805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 798,
											"end": 805,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 798,
											"end": 805,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 805,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 811,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "JUMPDEST"
										},
										{
											"begin": 12957,
											"end": 12964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "DUP1"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "SWAP1"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "SLOAD"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "SWAP1"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "EXP"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "SWAP1"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "DIV"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12980,
											"end": 12986,
											"name": "AND"
										},
										{
											"begin": 12973,
											"end": 12986,
											"name": "SWAP1"
										},
										{
											"begin": 12973,
											"end": 12986,
											"name": "POP"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "SWAP1"
										},
										{
											"begin": 12919,
											"end": 12992,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMPDEST"
										},
										{
											"begin": 1065,
											"end": 1078,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MUL"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SUB"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DIV"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DIV"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MUL"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MLOAD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP3"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP3"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MUL"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SUB"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DIV"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPI"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "LT"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPI"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP4"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DIV"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MUL"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP4"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP3"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "KECCAK256"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP4"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "GT"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPI"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP3"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SUB"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "AND"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "DUP3"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "JUMPDEST"
										},
										{
											"begin": 4705,
											"end": 4709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMPDEST"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SLOAD"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "EXP"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DIV"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "EQ"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "REVERT"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST"
										},
										{
											"begin": 4718,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 4724,
											"end": 4734,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 4724,
											"end": 4736,
											"name": "JUMPDEST"
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP4"
										},
										{
											"begin": 4718,
											"end": 4723,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 4718,
											"end": 4745,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4718,
											"end": 4745,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 4718,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4759,
											"end": 4763,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4752,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4752,
											"end": 4763,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP2"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "POP"
										},
										{
											"begin": 4649,
											"end": 4769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "JUMPDEST"
										},
										{
											"begin": 4283,
											"end": 4287,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4425,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 4305,
											"end": 4317,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4305,
											"end": 4317,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4317,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 4305,
											"end": 4317,
											"name": "JUMPDEST"
										},
										{
											"begin": 4319,
											"end": 4326,
											"name": "DUP5"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DUP6"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "MLOAD"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "DUP1"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "DUP1"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "SWAP2"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "CODECOPY"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 4340,
											"end": 4350,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 4340,
											"end": 4352,
											"name": "JUMPDEST"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4353,
											"name": "KECCAK256"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4361,
											"name": "DUP11"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "MSTORE"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "KECCAK256"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "SLOAD"
										},
										{
											"begin": 4328,
											"end": 4366,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 4328,
											"end": 4366,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "SWAP3"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "SWAP2"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "SWAP1"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "AND"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 4328,
											"end": 4424,
											"name": "JUMPDEST"
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4296,
											"end": 4425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4296,
											"end": 4425,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 4296,
											"end": 4425,
											"name": "JUMPDEST"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4432,
											"end": 4443,
											"name": "SWAP1"
										},
										{
											"begin": 4432,
											"end": 4443,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP3"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "POP"
										},
										{
											"begin": 4198,
											"end": 4449,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "JUMPDEST"
										},
										{
											"begin": 1843,
											"end": 1847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1898,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST"
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "DUP5"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DUP5"
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 1856,
											"end": 1898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1898,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1856,
											"end": 1898,
											"name": "JUMPDEST"
										},
										{
											"begin": 1912,
											"end": 1916,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP3"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "SWAP2"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "JUMPDEST"
										},
										{
											"begin": 2059,
											"end": 2066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2093,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2099,
											"name": "DUP5"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "SWAP1"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "KECCAK256"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2108,
											"name": "DUP4"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SWAP1"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "MSTORE"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "ADD"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "KECCAK256"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2109,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2109,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP3"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "POP"
										},
										{
											"begin": 1976,
											"end": 2115,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "JUMPDEST"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 13123,
											"end": 13133,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 13123,
											"end": 13135,
											"name": "JUMPDEST"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DUP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SLOAD"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "EXP"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "SWAP1"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "DIV"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13119,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "AND"
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "EQ"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPI"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP3"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "POP"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "MLOAD"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "DUP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP2"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SUB"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "REVERT"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST"
										},
										{
											"begin": 13865,
											"end": 13893,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 13884,
											"end": 13892,
											"name": "DUP2"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 13865,
											"end": 13893,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13865,
											"end": 13893,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 13865,
											"end": 13893,
											"name": "JUMPDEST"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "POP"
										},
										{
											"begin": 13796,
											"end": 13899,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5768,
											"end": 5860,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 5768,
											"end": 5860,
											"name": "JUMPDEST"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5854,
											"name": "CALLER"
										},
										{
											"begin": 5837,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5837,
											"end": 5854,
											"name": "POP"
										},
										{
											"begin": 5768,
											"end": 5860,
											"name": "SWAP1"
										},
										{
											"begin": 5768,
											"end": 5860,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "JUMPDEST"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "AND"
										},
										{
											"begin": 7883,
											"end": 7888,
											"name": "DUP4"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "AND"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "EQ"
										},
										{
											"begin": 7883,
											"end": 7902,
											"name": "ISZERO"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "JUMPI"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "MLOAD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "MSTORE"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "ADD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP1"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP1"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "ADD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP3"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SUB"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP3"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "MSTORE"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "MSTORE"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "ADD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP1"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SWAP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "CODECOPY"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "ADD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SWAP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "POP"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "POP"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "MLOAD"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "DUP1"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SWAP2"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SUB"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "SWAP1"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "REVERT"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7875,
											"end": 7943,
											"name": "JUMPDEST"
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND"
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "EQ"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "ISZERO"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "JUMPI"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "MLOAD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "MSTORE"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "ADD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP1"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP1"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "ADD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP3"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SUB"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP3"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "MSTORE"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "MSTORE"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "ADD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP1"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SWAP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "CODECOPY"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "ADD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SWAP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "POP"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "POP"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "MLOAD"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "DUP1"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SWAP2"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SUB"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "SWAP1"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "REVERT"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 7950,
											"end": 8018,
											"name": "JUMPDEST"
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP1"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8044,
											"name": "DUP6"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "AND"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "AND"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "MSTORE"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "ADD"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "SWAP1"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "MSTORE"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "ADD"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "KECCAK256"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8046,
											"end": 8053,
											"name": "DUP5"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "AND"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "AND"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "MSTORE"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "ADD"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "SWAP1"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "MSTORE"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "ADD"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8054,
											"name": "KECCAK256"
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "SWAP1"
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "SSTORE"
										},
										{
											"begin": 8027,
											"end": 8063,
											"name": "POP"
										},
										{
											"begin": 8091,
											"end": 8098,
											"name": "DUP2"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "AND"
										},
										{
											"begin": 8084,
											"end": 8089,
											"name": "DUP4"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "AND"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP4"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "MLOAD"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "DUP1"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "DUP3"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "DUP2"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "MSTORE"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "ADD"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "SWAP2"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "POP"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "POP"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "MLOAD"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "DUP1"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "SWAP2"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "SUB"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "SWAP1"
										},
										{
											"begin": 8075,
											"end": 8107,
											"name": "LOG3"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "POP"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "POP"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "POP"
										},
										{
											"begin": 7793,
											"end": 8113,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "JUMPDEST"
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "AND"
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "DUP4"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "AND"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "EQ"
										},
										{
											"begin": 5837,
											"end": 5857,
											"name": "ISZERO"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "JUMPI"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "MLOAD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "MSTORE"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "ADD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "ADD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP3"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SUB"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP3"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "MSTORE"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "MSTORE"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "ADD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SWAP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "CODECOPY"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "ADD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SWAP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "POP"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "POP"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "MLOAD"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "DUP1"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SWAP2"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SUB"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "SWAP1"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "REVERT"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 5829,
											"end": 5899,
											"name": "JUMPDEST"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "DUP3"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "EQ"
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "ISZERO"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "JUMPI"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP3"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "MSTORE"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "CODECOPY"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "ADD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "POP"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "MLOAD"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "DUP1"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SWAP2"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SUB"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "SWAP1"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "REVERT"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5906,
											"end": 5977,
											"name": "JUMPDEST"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "DUP2"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "MLOAD"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "DUP1"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "ADD"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "MSTORE"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "DUP1"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "DUP2"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "MSTORE"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "ADD"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "SWAP2"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "CODECOPY"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6016,
											"end": 6022,
											"name": "DUP8"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "DUP2"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "MSTORE"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "SWAP1"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "DUP2"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "MSTORE"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "ADD"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "KECCAK256"
										},
										{
											"begin": 6006,
											"end": 6023,
											"name": "SLOAD"
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "SWAP1"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "SWAP3"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "SWAP2"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "SWAP1"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "AND"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 6006,
											"end": 6077,
											"name": "JUMPDEST"
										},
										{
											"begin": 5986,
											"end": 5995,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6002,
											"name": "DUP6"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "AND"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "SWAP1"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "DUP2"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "MSTORE"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "ADD"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5986,
											"end": 6003,
											"name": "KECCAK256"
										},
										{
											"begin": 5986,
											"end": 6077,
											"name": "DUP2"
										},
										{
											"begin": 5986,
											"end": 6077,
											"name": "SWAP1"
										},
										{
											"begin": 5986,
											"end": 6077,
											"name": "SSTORE"
										},
										{
											"begin": 5986,
											"end": 6077,
											"name": "POP"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6126,
											"name": "DUP6"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "AND"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "AND"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "ADD"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "DUP2"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "MSTORE"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "ADD"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "KECCAK256"
										},
										{
											"begin": 6107,
											"end": 6127,
											"name": "SLOAD"
										},
										{
											"begin": 6107,
											"end": 6131,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6107,
											"end": 6131,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "SWAP2"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "SWAP1"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "AND"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 6107,
											"end": 6139,
											"name": "JUMPDEST"
										},
										{
											"begin": 6084,
											"end": 6093,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP5"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "AND"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "AND"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "DUP2"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "MSTORE"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "ADD"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "SWAP1"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "DUP2"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "MSTORE"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "ADD"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6104,
											"name": "KECCAK256"
										},
										{
											"begin": 6084,
											"end": 6139,
											"name": "DUP2"
										},
										{
											"begin": 6084,
											"end": 6139,
											"name": "SWAP1"
										},
										{
											"begin": 6084,
											"end": 6139,
											"name": "SSTORE"
										},
										{
											"begin": 6084,
											"end": 6139,
											"name": "POP"
										},
										{
											"begin": 6168,
											"end": 6177,
											"name": "DUP2"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "AND"
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP4"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "AND"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "DUP4"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "MLOAD"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "DUP1"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "DUP3"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "DUP2"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "MSTORE"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "ADD"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "SWAP2"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "POP"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "POP"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "MLOAD"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "DUP1"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "SWAP2"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "SUB"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "SWAP1"
										},
										{
											"begin": 6151,
											"end": 6186,
											"name": "LOG3"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "POP"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "POP"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "POP"
										},
										{
											"begin": 5743,
											"end": 6192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "JUMPDEST"
										},
										{
											"begin": 8247,
											"end": 8254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8276,
											"end": 8277,
											"name": "DUP4"
										},
										{
											"begin": 8271,
											"end": 8272,
											"name": "DUP4"
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "GT"
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "ISZERO"
										},
										{
											"begin": 8279,
											"end": 8291,
											"name": "DUP3"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "JUMPI"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP3"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP3"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP4"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP4"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "AND"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ISZERO"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "JUMPI"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP3"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP4"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "EXP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "NOT"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "AND"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MSTORE"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "ADD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "JUMPDEST"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP3"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "MLOAD"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "DUP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP2"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SUB"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "SWAP1"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "REVERT"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "JUMPDEST"
										},
										{
											"begin": 8263,
											"end": 8292,
											"name": "POP"
										},
										{
											"begin": 8299,
											"end": 8308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8316,
											"name": "DUP4"
										},
										{
											"begin": 8311,
											"end": 8312,
											"name": "DUP6"
										},
										{
											"begin": 8311,
											"end": 8316,
											"name": "SUB"
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "SWAP1"
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "POP"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "DUP1"
										},
										{
											"begin": 8325,
											"end": 8333,
											"name": "SWAP2"
										},
										{
											"begin": 8325,
											"end": 8333,
											"name": "POP"
										},
										{
											"begin": 8325,
											"end": 8333,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "SWAP4"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "SWAP3"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8339,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "JUMPDEST"
										},
										{
											"begin": 7392,
											"end": 7399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7417,
											"name": "DUP1"
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "DUP3"
										},
										{
											"begin": 7420,
											"end": 7421,
											"name": "DUP5"
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "ADD"
										},
										{
											"begin": 7408,
											"end": 7425,
											"name": "SWAP1"
										},
										{
											"begin": 7408,
											"end": 7425,
											"name": "POP"
										},
										{
											"begin": 7445,
											"end": 7446,
											"name": "DUP4"
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "DUP2"
										},
										{
											"begin": 7440,
											"end": 7446,
											"name": "LT"
										},
										{
											"begin": 7440,
											"end": 7446,
											"name": "ISZERO"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "JUMPI"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MLOAD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MSTORE"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "ADD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP1"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP1"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "ADD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP3"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "SUB"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP3"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MSTORE"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MSTORE"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "ADD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP1"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MSTORE"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "POP"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "ADD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "SWAP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "POP"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "POP"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "MLOAD"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "DUP1"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "SWAP2"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "SUB"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "SWAP1"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "REVERT"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 7432,
											"end": 7478,
											"name": "JUMPDEST"
										},
										{
											"begin": 7494,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7487,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7487,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7487,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "SWAP3"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "SWAP2"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "POP"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "POP"
										},
										{
											"begin": 7334,
											"end": 7501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7051,
											"end": 7381,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 7051,
											"end": 7381,
											"name": "JUMPDEST"
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "AND"
										},
										{
											"begin": 7123,
											"end": 7130,
											"name": "DUP3"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "AND"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "EQ"
										},
										{
											"begin": 7123,
											"end": 7144,
											"name": "ISZERO"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "JUMPI"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "MLOAD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "MSTORE"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "ADD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP1"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP1"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "ADD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP3"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SUB"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP3"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "MSTORE"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "MSTORE"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "ADD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP1"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SWAP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "CODECOPY"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "ADD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SWAP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "POP"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "POP"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "MLOAD"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "DUP1"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SWAP2"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SUB"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "SWAP1"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "REVERT"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 7115,
											"end": 7182,
											"name": "JUMPDEST"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP2"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "MLOAD"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "DUP1"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "ADD"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "MSTORE"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "DUP1"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "DUP2"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "MSTORE"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "ADD"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "SWAP2"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "CODECOPY"
										},
										{
											"begin": 7212,
											"end": 7221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7229,
											"name": "DUP7"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "AND"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "AND"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "DUP2"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "MSTORE"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "ADD"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "SWAP1"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "DUP2"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "MSTORE"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "ADD"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "KECCAK256"
										},
										{
											"begin": 7212,
											"end": 7230,
											"name": "SLOAD"
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "SWAP1"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "SWAP3"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "SWAP2"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "SWAP1"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "AND"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 7212,
											"end": 7280,
											"name": "JUMPDEST"
										},
										{
											"begin": 7191,
											"end": 7200,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "DUP5"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "AND"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "AND"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "DUP2"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "MSTORE"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "SWAP1"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "DUP2"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "MSTORE"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "ADD"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "KECCAK256"
										},
										{
											"begin": 7191,
											"end": 7280,
											"name": "DUP2"
										},
										{
											"begin": 7191,
											"end": 7280,
											"name": "SWAP1"
										},
										{
											"begin": 7191,
											"end": 7280,
											"name": "SSTORE"
										},
										{
											"begin": 7191,
											"end": 7280,
											"name": "POP"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 7319,
											"end": 7325,
											"name": "DUP2"
										},
										{
											"begin": 7302,
											"end": 7314,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7302,
											"end": 7314,
											"name": "SLOAD"
										},
										{
											"begin": 7302,
											"end": 7318,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 7302,
											"end": 7318,
											"name": "SWAP1"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "SWAP2"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "SWAP1"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "AND"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 7302,
											"end": 7326,
											"name": "JUMPDEST"
										},
										{
											"begin": 7287,
											"end": 7299,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7287,
											"end": 7326,
											"name": "DUP2"
										},
										{
											"begin": 7287,
											"end": 7326,
											"name": "SWAP1"
										},
										{
											"begin": 7287,
											"end": 7326,
											"name": "SSTORE"
										},
										{
											"begin": 7287,
											"end": 7326,
											"name": "POP"
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "AND"
										},
										{
											"begin": 7347,
											"end": 7354,
											"name": "DUP3"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "AND"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7368,
											"end": 7374,
											"name": "DUP4"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "MLOAD"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP1"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP3"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP2"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "MSTORE"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "ADD"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SWAP2"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "POP"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "POP"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "MLOAD"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP1"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SWAP2"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SUB"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SWAP1"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "LOG3"
										},
										{
											"begin": 7051,
											"end": 7381,
											"name": "POP"
										},
										{
											"begin": 7051,
											"end": 7381,
											"name": "POP"
										},
										{
											"begin": 7051,
											"end": 7381,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8285,
											"end": 8507,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 8285,
											"end": 8507,
											"name": "JUMPDEST"
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8359,
											"end": 8366,
											"name": "DUP3"
										},
										{
											"begin": 8368,
											"end": 8374,
											"name": "DUP3"
										},
										{
											"begin": 8353,
											"end": 8358,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "JUMPDEST"
										},
										{
											"begin": 8382,
											"end": 8501,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 8391,
											"end": 8398,
											"name": "DUP3"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 8400,
											"end": 8410,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "JUMPDEST"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 8453,
											"end": 8459,
											"name": "DUP5"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "MLOAD"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "DUP1"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "DUP1"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "DUP2"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH data",
											"value": "EC946F0DEC32D4BE54E4FDBA37F6EF29C5468152774E7820C946D7689F97EC88"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "SWAP2"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "CODECOPY"
										},
										{
											"begin": 8414,
											"end": 8425,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8433,
											"name": "DUP10"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "AND"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "AND"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "DUP2"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "SWAP1"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "DUP2"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "KECCAK256"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8447,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 8435,
											"end": 8445,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8435,
											"end": 8447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8435,
											"end": 8447,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 8435,
											"end": 8447,
											"name": "JUMPDEST"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "AND"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "AND"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "DUP2"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "SWAP1"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "DUP2"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "MSTORE"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "ADD"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "KECCAK256"
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "SLOAD"
										},
										{
											"begin": 8414,
											"end": 8452,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8414,
											"end": 8452,
											"name": "SWAP1"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "SWAP3"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "SWAP2"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "SWAP1"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "AND"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 8414,
											"end": 8500,
											"name": "JUMPDEST"
										},
										{
											"begin": 8382,
											"end": 8390,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 8382,
											"end": 8501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8382,
											"end": 8501,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 8382,
											"end": 8501,
											"name": "JUMPDEST"
										},
										{
											"begin": 8285,
											"end": 8507,
											"name": "POP"
										},
										{
											"begin": 8285,
											"end": 8507,
											"name": "POP"
										},
										{
											"begin": 8285,
											"end": 8507,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6453,
											"end": 6743,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 6453,
											"end": 6743,
											"name": "JUMPDEST"
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "AND"
										},
										{
											"begin": 6525,
											"end": 6532,
											"name": "DUP3"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "AND"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "EQ"
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "ISZERO"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "JUMPI"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MLOAD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MSTORE"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP3"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "SUB"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP3"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MSTORE"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MSTORE"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MSTORE"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "ADD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "POP"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "MLOAD"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "DUP1"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "SWAP2"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "SUB"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "SWAP1"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "REVERT"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "JUMPDEST"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "DUP2"
										},
										{
											"begin": 6606,
											"end": 6618,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6606,
											"end": 6618,
											"name": "SLOAD"
										},
										{
											"begin": 6606,
											"end": 6622,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6606,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "SWAP2"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "AND"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 6606,
											"end": 6630,
											"name": "JUMPDEST"
										},
										{
											"begin": 6591,
											"end": 6603,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6591,
											"end": 6630,
											"name": "DUP2"
										},
										{
											"begin": 6591,
											"end": 6630,
											"name": "SWAP1"
										},
										{
											"begin": 6591,
											"end": 6630,
											"name": "SSTORE"
										},
										{
											"begin": 6591,
											"end": 6630,
											"name": "POP"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 6681,
											"end": 6687,
											"name": "DUP2"
										},
										{
											"begin": 6658,
											"end": 6667,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6668,
											"end": 6675,
											"name": "DUP6"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "AND"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "AND"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "DUP2"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "MSTORE"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "ADD"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "SWAP1"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "DUP2"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "MSTORE"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "ADD"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "KECCAK256"
										},
										{
											"begin": 6658,
											"end": 6676,
											"name": "SLOAD"
										},
										{
											"begin": 6658,
											"end": 6680,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 6658,
											"end": 6680,
											"name": "SWAP1"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "SWAP2"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "SWAP1"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "AND"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 6658,
											"end": 6688,
											"name": "JUMPDEST"
										},
										{
											"begin": 6637,
											"end": 6646,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6654,
											"name": "DUP5"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "AND"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "AND"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "DUP2"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "MSTORE"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "ADD"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "SWAP1"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "DUP2"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "MSTORE"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "ADD"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "KECCAK256"
										},
										{
											"begin": 6637,
											"end": 6688,
											"name": "DUP2"
										},
										{
											"begin": 6637,
											"end": 6688,
											"name": "SWAP1"
										},
										{
											"begin": 6637,
											"end": 6688,
											"name": "SSTORE"
										},
										{
											"begin": 6637,
											"end": 6688,
											"name": "POP"
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP2"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "AND"
										},
										{
											"begin": 6717,
											"end": 6718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "AND"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP4"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "MLOAD"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "DUP1"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "DUP3"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "DUP2"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "MSTORE"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "ADD"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "SWAP2"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "POP"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "POP"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "MLOAD"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "DUP1"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "SWAP2"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "SUB"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "SWAP1"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "LOG3"
										},
										{
											"begin": 6453,
											"end": 6743,
											"name": "POP"
										},
										{
											"begin": 6453,
											"end": 6743,
											"name": "POP"
										},
										{
											"begin": 6453,
											"end": 6743,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13997,
											"end": 14212,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 13997,
											"end": 14212,
											"name": "JUMPDEST"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "AND"
										},
										{
											"begin": 14067,
											"end": 14075,
											"name": "DUP2"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "AND"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "EQ"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "ISZERO"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "JUMPI"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "MLOAD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP3"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SUB"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP3"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "MSTORE"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SWAP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "CODECOPY"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "ADD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SWAP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "POP"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "MLOAD"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "DUP1"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SWAP2"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SUB"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "SWAP1"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "REVERT"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 14059,
											"end": 14132,
											"name": "JUMPDEST"
										},
										{
											"begin": 14173,
											"end": 14181,
											"name": "DUP1"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "AND"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DUP1"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "SLOAD"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "EXP"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "SWAP1"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DIV"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "AND"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "AND"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "MLOAD"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "MLOAD"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "DUP1"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "SWAP2"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "SUB"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "SWAP1"
										},
										{
											"begin": 14144,
											"end": 14182,
											"name": "LOG3"
										},
										{
											"begin": 14198,
											"end": 14206,
											"name": "DUP1"
										},
										{
											"begin": 14189,
											"end": 14195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14195,
											"name": "DUP1"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "EXP"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "DUP2"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "SLOAD"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "DUP2"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "MUL"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "NOT"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "AND"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "SWAP1"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "DUP4"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "AND"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "MUL"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "OR"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "SWAP1"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "SSTORE"
										},
										{
											"begin": 14189,
											"end": 14206,
											"name": "POP"
										},
										{
											"begin": 13997,
											"end": 14212,
											"name": "POP"
										},
										{
											"begin": 13997,
											"end": 14212,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "JUMPDEST"
										},
										{
											"begin": 7814,
											"end": 7821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 7841,
											"end": 7842,
											"name": "DUP4"
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "DUP4"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MLOAD"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP1"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "ADD"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "DUP2"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "MSTORE"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 7837,
											"end": 7880,
											"name": "JUMPDEST"
										},
										{
											"begin": 7830,
											"end": 7880,
											"name": "SWAP1"
										},
										{
											"begin": 7830,
											"end": 7880,
											"name": "POP"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "SWAP3"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "SWAP2"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "POP"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "POP"
										},
										{
											"begin": 7756,
											"end": 7886,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"EC946F0DEC32D4BE54E4FDBA37F6EF29C5468152774E7820C946D7689F97EC88": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"camp/SushiToken.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"camp/SushiToken.sol\":{\"keccak256\":\"0xd889bca468e3b04a8449c4a9d501b6196961cfd94a9b9d6a8109666063c73d7b\",\"urls\":[\"bzz-raw://6fd7b920782638cbcbf82281c7722c9171dbf02216076a5d8e78e09049e3d75f\",\"dweb:/ipfs/QmTVEU3urMqsP9XgoGgdHLD4uhayyazx4QcAyVuMDvN8b8\"]},\"camp/interface.sol\":{\"keccak256\":\"0x0ec1407979144050b539099472bcd8d25606620d3e5214d9627182f3b20f933b\",\"urls\":[\"bzz-raw://6be02deb96cb50a073c72d898b491ff38aa12a17d4f88c1091218960dedfaa03\",\"dweb:/ipfs/QmSw5z1sH1WFeEKnFmghUngdFKexYBpze77bEc8mwv5NhN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 27,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "camp/SushiToken.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"camp/interface.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"camp/interface.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"camp/interface.sol\":{\"keccak256\":\"0x0ec1407979144050b539099472bcd8d25606620d3e5214d9627182f3b20f933b\",\"urls\":[\"bzz-raw://6be02deb96cb50a073c72d898b491ff38aa12a17d4f88c1091218960dedfaa03\",\"dweb:/ipfs/QmSw5z1sH1WFeEKnFmghUngdFKexYBpze77bEc8mwv5NhN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called. 返回津贴享有者（spender）仍可从所有者（_owner）中提取的剩余令牌数量。默认为0 调用{approve}或{transferFrom}时，此值会更改    "
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event. 将指定的账户(amount)设置为津贴享有者，并设定最多提取数量。若成功则返回true 重要提示：使用这种方法更改津贴会带来风险 有人可能通过不幸的交易顺序使用旧的和新的津贴。 缓解这场竞争的一个可能解决方案则是，首先将支出者的津贴减少到0，并设置为之后的期望值。参考：https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    *"
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`. 返回指定账户地址在该合约中拥有的数量。"
							},
							"decimals()": {
								"details": "Returns the token decimals. 返回标记小数"
							},
							"getOwner()": {
								"details": "Returns the bep token owner. 获取该合约所有者的地址"
							},
							"name()": {
								"details": "Returns the token name. 返回合约名称"
							},
							"symbol()": {
								"details": "Returns the token symbol. 返回合约token的符号"
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence. 返回账户余额"
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.    * 将指定的数量转账给指定的目标地址。recipient为目标地址。"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.    * 指定发送者（sender）向接收者（recipient）转移指定数量的令牌。 需要注意的是，即使双方或任何一方的地址值是0，仍然被视为正常转移。"
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called. \\u8fd4\\u56de\\u6d25\\u8d34\\u4eab\\u6709\\u8005\\uff08spender\\uff09\\u4ecd\\u53ef\\u4ece\\u6240\\u6709\\u8005\\uff08_owner\\uff09\\u4e2d\\u63d0\\u53d6\\u7684\\u5269\\u4f59\\u4ee4\\u724c\\u6570\\u91cf\\u3002\\u9ed8\\u8ba4\\u4e3a0 \\u8c03\\u7528{approve}\\u6216{transferFrom}\\u65f6\\uff0c\\u6b64\\u503c\\u4f1a\\u66f4\\u6539    \"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event. \\u5c06\\u6307\\u5b9a\\u7684\\u8d26\\u6237(amount)\\u8bbe\\u7f6e\\u4e3a\\u6d25\\u8d34\\u4eab\\u6709\\u8005\\uff0c\\u5e76\\u8bbe\\u5b9a\\u6700\\u591a\\u63d0\\u53d6\\u6570\\u91cf\\u3002\\u82e5\\u6210\\u529f\\u5219\\u8fd4\\u56detrue \\u91cd\\u8981\\u63d0\\u793a\\uff1a\\u4f7f\\u7528\\u8fd9\\u79cd\\u65b9\\u6cd5\\u66f4\\u6539\\u6d25\\u8d34\\u4f1a\\u5e26\\u6765\\u98ce\\u9669 \\u6709\\u4eba\\u53ef\\u80fd\\u901a\\u8fc7\\u4e0d\\u5e78\\u7684\\u4ea4\\u6613\\u987a\\u5e8f\\u4f7f\\u7528\\u65e7\\u7684\\u548c\\u65b0\\u7684\\u6d25\\u8d34\\u3002 \\u7f13\\u89e3\\u8fd9\\u573a\\u7ade\\u4e89\\u7684\\u4e00\\u4e2a\\u53ef\\u80fd\\u89e3\\u51b3\\u65b9\\u6848\\u5219\\u662f\\uff0c\\u9996\\u5148\\u5c06\\u652f\\u51fa\\u8005\\u7684\\u6d25\\u8d34\\u51cf\\u5c11\\u52300\\uff0c\\u5e76\\u8bbe\\u7f6e\\u4e3a\\u4e4b\\u540e\\u7684\\u671f\\u671b\\u503c\\u3002\\u53c2\\u8003\\uff1ahttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    *\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`. \\u8fd4\\u56de\\u6307\\u5b9a\\u8d26\\u6237\\u5730\\u5740\\u5728\\u8be5\\u5408\\u7ea6\\u4e2d\\u62e5\\u6709\\u7684\\u6570\\u91cf\\u3002\"},\"decimals()\":{\"details\":\"Returns the token decimals. \\u8fd4\\u56de\\u6807\\u8bb0\\u5c0f\\u6570\"},\"getOwner()\":{\"details\":\"Returns the bep token owner. \\u83b7\\u53d6\\u8be5\\u5408\\u7ea6\\u6240\\u6709\\u8005\\u7684\\u5730\\u5740\"},\"name()\":{\"details\":\"Returns the token name. \\u8fd4\\u56de\\u5408\\u7ea6\\u540d\\u79f0\"},\"symbol()\":{\"details\":\"Returns the token symbol. \\u8fd4\\u56de\\u5408\\u7ea6token\\u7684\\u7b26\\u53f7\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence. \\u8fd4\\u56de\\u8d26\\u6237\\u4f59\\u989d\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.    * \\u5c06\\u6307\\u5b9a\\u7684\\u6570\\u91cf\\u8f6c\\u8d26\\u7ed9\\u6307\\u5b9a\\u7684\\u76ee\\u6807\\u5730\\u5740\\u3002recipient\\u4e3a\\u76ee\\u6807\\u5730\\u5740\\u3002\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.    * \\u6307\\u5b9a\\u53d1\\u9001\\u8005\\uff08sender\\uff09\\u5411\\u63a5\\u6536\\u8005\\uff08recipient\\uff09\\u8f6c\\u79fb\\u6307\\u5b9a\\u6570\\u91cf\\u7684\\u4ee4\\u724c\\u3002 \\u9700\\u8981\\u6ce8\\u610f\\u7684\\u662f\\uff0c\\u5373\\u4f7f\\u53cc\\u65b9\\u6216\\u4efb\\u4f55\\u4e00\\u65b9\\u7684\\u5730\\u5740\\u503c\\u662f0\\uff0c\\u4ecd\\u7136\\u88ab\\u89c6\\u4e3a\\u6b63\\u5e38\\u8f6c\\u79fb\\u3002\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"camp/interface.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"camp/interface.sol\":{\"keccak256\":\"0x0ec1407979144050b539099472bcd8d25606620d3e5214d9627182f3b20f933b\",\"urls\":[\"bzz-raw://6be02deb96cb50a073c72d898b491ff38aa12a17d4f88c1091218960dedfaa03\",\"dweb:/ipfs/QmSw5z1sH1WFeEKnFmghUngdFKexYBpze77bEc8mwv5NhN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner. 提供基本访问控制机制的合同模块， 有一个账户（所有者）可以被授予对特定功能的独占访问权。 默认情况下，所有者帐户将是部署合同的帐户。稍后可以使用{transferOwnership}更改此设置。 该模块通过继承使用。它将使修饰符“onlyOwner”可用，它可以应用于您的函数，以将它们的使用限制为所有者。",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner. \\u63d0\\u4f9b\\u57fa\\u672c\\u8bbf\\u95ee\\u63a7\\u5236\\u673a\\u5236\\u7684\\u5408\\u540c\\u6a21\\u5757\\uff0c \\u6709\\u4e00\\u4e2a\\u8d26\\u6237\\uff08\\u6240\\u6709\\u8005\\uff09\\u53ef\\u4ee5\\u88ab\\u6388\\u4e88\\u5bf9\\u7279\\u5b9a\\u529f\\u80fd\\u7684\\u72ec\\u5360\\u8bbf\\u95ee\\u6743\\u3002 \\u9ed8\\u8ba4\\u60c5\\u51b5\\u4e0b\\uff0c\\u6240\\u6709\\u8005\\u5e10\\u6237\\u5c06\\u662f\\u90e8\\u7f72\\u5408\\u540c\\u7684\\u5e10\\u6237\\u3002\\u7a0d\\u540e\\u53ef\\u4ee5\\u4f7f\\u7528{transferOwnership}\\u66f4\\u6539\\u6b64\\u8bbe\\u7f6e\\u3002 \\u8be5\\u6a21\\u5757\\u901a\\u8fc7\\u7ee7\\u627f\\u4f7f\\u7528\\u3002\\u5b83\\u5c06\\u4f7f\\u4fee\\u9970\\u7b26\\u201conlyOwner\\u201d\\u53ef\\u7528\\uff0c\\u5b83\\u53ef\\u4ee5\\u5e94\\u7528\\u4e8e\\u60a8\\u7684\\u51fd\\u6570\\uff0c\\u4ee5\\u5c06\\u5b83\\u4eec\\u7684\\u4f7f\\u7528\\u9650\\u5236\\u4e3a\\u6240\\u6709\\u8005\\u3002\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"camp/interface.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"camp/interface.sol\":{\"keccak256\":\"0x0ec1407979144050b539099472bcd8d25606620d3e5214d9627182f3b20f933b\",\"urls\":[\"bzz-raw://6be02deb96cb50a073c72d898b491ff38aa12a17d4f88c1091218960dedfaa03\",\"dweb:/ipfs/QmSw5z1sH1WFeEKnFmghUngdFKexYBpze77bEc8mwv5NhN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 860,
								"contract": "camp/interface.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. 在Solidity的算术操作上添加溢出检查的包装器。 solid中的算术运算在溢出时自动包装。这很容易导致bug， 因为程序员通常假设溢出会引发错误，这是高级编程语言中的标准行为。 当操作溢出时，' SafeMath '通过恢复事务来恢复这种直觉。 使用这个库而不是未检查的操作可以消除整个类的bug，所以建议始终使用它。",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"camp/interface.sol\":7099:11527  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"camp/interface.sol\":7099:11527  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122011981dc6eb6c80edf42abab2fd2fd6a9ec56929083e750ba8a82aa8a0d69736a64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011981dc6eb6c80edf42abab2fd2fd6a9ec56929083e750ba8a82aa8a0d69736a64736f6c63430006000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP9 SAR 0xC6 0xEB PUSH13 0x80EDF42ABAB2FD2FD6A9EC5692 SWAP1 DUP4 0xE7 POP 0xBA DUP11 DUP3 0xAA DUP11 0xD PUSH10 0x736A64736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "7099:4428:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011981dc6eb6c80edf42abab2fd2fd6a9ec56929083e750ba8a82aa8a0d69736a64736f6c63430006000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT SWAP9 SAR 0xC6 0xEB PUSH13 0x80EDF42ABAB2FD2FD6A9EC5692 SWAP1 DUP4 0xE7 POP 0xBA DUP11 DUP3 0xAA DUP11 0xD PUSH10 0x736A64736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "7099:4428:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7099,
									"end": 11527,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7099,
									"end": 11527,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011981dc6eb6c80edf42abab2fd2fd6a9ec56929083e750ba8a82aa8a0d69736a64736f6c63430006000033",
									".code": [
										{
											"begin": 7099,
											"end": 11527,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "ADDRESS"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "EQ"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "MSTORE"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 7099,
											"end": 11527,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. \\u5728Solidity\\u7684\\u7b97\\u672f\\u64cd\\u4f5c\\u4e0a\\u6dfb\\u52a0\\u6ea2\\u51fa\\u68c0\\u67e5\\u7684\\u5305\\u88c5\\u5668\\u3002 solid\\u4e2d\\u7684\\u7b97\\u672f\\u8fd0\\u7b97\\u5728\\u6ea2\\u51fa\\u65f6\\u81ea\\u52a8\\u5305\\u88c5\\u3002\\u8fd9\\u5f88\\u5bb9\\u6613\\u5bfc\\u81f4bug\\uff0c \\u56e0\\u4e3a\\u7a0b\\u5e8f\\u5458\\u901a\\u5e38\\u5047\\u8bbe\\u6ea2\\u51fa\\u4f1a\\u5f15\\u53d1\\u9519\\u8bef\\uff0c\\u8fd9\\u662f\\u9ad8\\u7ea7\\u7f16\\u7a0b\\u8bed\\u8a00\\u4e2d\\u7684\\u6807\\u51c6\\u884c\\u4e3a\\u3002 \\u5f53\\u64cd\\u4f5c\\u6ea2\\u51fa\\u65f6\\uff0c' SafeMath '\\u901a\\u8fc7\\u6062\\u590d\\u4e8b\\u52a1\\u6765\\u6062\\u590d\\u8fd9\\u79cd\\u76f4\\u89c9\\u3002 \\u4f7f\\u7528\\u8fd9\\u4e2a\\u5e93\\u800c\\u4e0d\\u662f\\u672a\\u68c0\\u67e5\\u7684\\u64cd\\u4f5c\\u53ef\\u4ee5\\u6d88\\u9664\\u6574\\u4e2a\\u7c7b\\u7684bug\\uff0c\\u6240\\u4ee5\\u5efa\\u8bae\\u59cb\\u7ec8\\u4f7f\\u7528\\u5b83\\u3002\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"camp/interface.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"camp/interface.sol\":{\"keccak256\":\"0x0ec1407979144050b539099472bcd8d25606620d3e5214d9627182f3b20f933b\",\"urls\":[\"bzz-raw://6be02deb96cb50a073c72d898b491ff38aa12a17d4f88c1091218960dedfaa03\",\"dweb:/ipfs/QmSw5z1sH1WFeEKnFmghUngdFKexYBpze77bEc8mwv5NhN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"camp/SushiToken.sol": {
				"ast": {
					"absolutePath": "camp/SushiToken.sol",
					"exportedSymbols": {
						"BEP20Token": [
							557
						]
					},
					"id": 558,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"absolutePath": "camp/interface.sol",
							"file": "./interface.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 558,
							"sourceUnit": 967,
							"src": "63:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 671,
										"src": "115:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$671",
											"typeString": "contract Context"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "115:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 5,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 646,
										"src": "124:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$646",
											"typeString": "contract IBEP20"
										}
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "124:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 966,
										"src": "132:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$966",
											"typeString": "contract Ownable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "132:7:0"
								}
							],
							"contractDependencies": [
								646,
								671,
								966
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 557,
							"linearizedBaseContracts": [
								557,
								966,
								646,
								671
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 856,
										"src": "151:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$856",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "145:27:0",
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "178:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "187:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "178:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "198:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "231:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "240:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "231:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "260:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "251:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "307:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "307:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "340:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "340:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "368:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "368:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 557,
									"src": "395:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "395:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "443:220:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 32,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "450:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "535573686920546f6b656e",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "458:13:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_2c0c5cccd40067113ffac674a2b99081b48173752ae9e2f73bd39d2a17e90cc0",
															"typeString": "literal_string \"SUshi Token\""
														},
														"value": "SUshi Token"
													},
													"src": "450:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "450:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "7375736869",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "488:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_cb2d20206d906069351c89a2cb7cdbd96c71998717cd5a82e724d955b654f67a",
															"typeString": "literal_string \"sushi\""
														},
														"value": "sushi"
													},
													"src": "478:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "478:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "502:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "514:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "502:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "502:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 44,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "523:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_5201314000000000000000000_by_1",
															"typeString": "int_const 5201314000000000000000000"
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "35323031333134",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:7:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5201314_by_1",
																"typeString": "int_const 5201314"
															},
															"value": "5201314"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "548:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "552:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "538:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5201314000000000000000000_by_1",
															"typeString": "int_const 5201314000000000000000000"
														}
													},
													"src": "523:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "523:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 52,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "561:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 55,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 53,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "571:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "571:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "561:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "585:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "561:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "561:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "628:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "620:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 60,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "620:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "620:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 64,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "632:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "632:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 66,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 59,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "611:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "611:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "EmitStatement",
												"src": "606:51:0"
											}
										]
									},
									"documentation": null,
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:0:0"
									},
									"scope": 557,
									"src": "422:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "784:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "798:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "798:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 75,
												"id": 78,
												"nodeType": "Return",
												"src": "791:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"functionSelector": "893d20e8",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 72,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "757:8:0"
									},
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "740:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "775:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "774:9:0"
									},
									"scope": 557,
									"src": "723:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "929:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "943:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 85,
												"id": 87,
												"nodeType": "Return",
												"src": "936:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"functionSelector": "313ce567",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "904:8:0"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "922:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 83,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "922:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "921:7:0"
									},
									"scope": 557,
									"src": "870:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										574
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1080:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 94,
												"id": 96,
												"nodeType": "Return",
												"src": "1087:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"functionSelector": "95d89b41",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1047:8:0"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 98,
												"src": "1065:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1065:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1064:15:0"
									},
									"scope": 557,
									"src": "1015:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1223:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1237:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 103,
												"id": 105,
												"nodeType": "Return",
												"src": "1230:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"functionSelector": "06fdde03",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1190:8:0"
									},
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "1208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1207:15:0"
									},
									"scope": 557,
									"src": "1160:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										564
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1368:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 113,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "1382:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 112,
												"id": 114,
												"nodeType": "Return",
												"src": "1375:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1341:8:0"
									},
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "1359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1358:9:0"
									},
									"scope": 557,
									"src": "1304:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1531:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1545:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 126,
													"indexExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1545:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 123,
												"id": 127,
												"nodeType": "Return",
												"src": "1538:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"functionSelector": "70a08231",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1504:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "1473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1472:17:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "1522:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1521:9:0"
									},
									"scope": 557,
									"src": "1454:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										600
									],
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "1849:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 140,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "1866:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1866:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 142,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1880:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 139,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1856:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1856:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1912:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 138,
												"id": 147,
												"nodeType": "Return",
												"src": "1905:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"functionSelector": "a9059cbb",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1825:8:0"
									},
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "1781:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "1800:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1780:35:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "1843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:6:0"
									},
									"scope": 557,
									"src": "1763:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										609
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2068:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 159,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2082:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 161,
														"indexExpression": {
															"argumentTypes": null,
															"id": 160,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2094:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2082:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 163,
													"indexExpression": {
														"argumentTypes": null,
														"id": 162,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2101:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2082:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 158,
												"id": 164,
												"nodeType": "Return",
												"src": "2075:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"functionSelector": "dd62ed3e",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2041:8:0"
									},
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "1995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1994:32:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:9:0"
									},
									"scope": 557,
									"src": "1976:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2328:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 177,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "2344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2344:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2358:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 180,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2367:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 176,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2335:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2335:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2388:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 175,
												"id": 184,
												"nodeType": "Return",
												"src": "2381:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"functionSelector": "095ea7b3",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2304:8:0"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2261:33:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2322:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2321:6:0"
									},
									"scope": 557,
									"src": "2245:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										629
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2949:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2966:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 200,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2974:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2985:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2956:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "2956:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 205,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 206,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "3016:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3016:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "3068:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3076:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 208,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "3030:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 210,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 209,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "3042:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3030:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 213,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 211,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "3050:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3050:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3030:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 739,
																"src": "3030:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3030:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 204,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2999:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3134:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 197,
												"id": 221,
												"nodeType": "Return",
												"src": "3127:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2925:8:0"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "2865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "2881:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "2900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2864:51:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "2943:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2943:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2942:6:0"
									},
									"scope": 557,
									"src": "2843:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "3612:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "3628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3628:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 235,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 243,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "3690:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 236,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "3651:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 239,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 237,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "3663:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3663:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3651:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 241,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 240,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "3677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3651:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 696,
																"src": "3651:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3651:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "3619:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "3619:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3716:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 231,
												"id": 248,
												"nodeType": "Return",
												"src": "3709:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"functionSelector": "39509351",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "3553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "3570:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3552:37:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 250,
												"src": "3606:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3605:6:0"
									},
									"scope": 557,
									"src": "3526:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4289:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 260,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "4305:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4305:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 262,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "4319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 270,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "4367:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4384:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 263,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "4328:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 266,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 264,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "4340:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4340:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4328:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 268,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 267,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "4354:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4328:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 739,
																"src": "4328:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4328:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4296:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4296:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "4296:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4439:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 258,
												"id": 276,
												"nodeType": "Return",
												"src": "4432:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"functionSelector": "a457c2d7",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "4225:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "4242:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4224:42:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 278,
												"src": "4283:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4283:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4282:6:0"
									},
									"scope": 557,
									"src": "4198:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "4711:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 288,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "4724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4724:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 290,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "4738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 287,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "4718:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "4718:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4759:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 286,
												"id": 294,
												"nodeType": "Return",
												"src": "4752:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"functionSelector": "a0712d68",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 283,
											"modifierName": {
												"argumentTypes": null,
												"id": 282,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "4686:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4686:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "4663:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4662:16:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "4705:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4704:6:0"
									},
									"scope": 557,
									"src": "4649:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "4838:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 306,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "4851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4851:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "4845:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "4845:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4886:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 304,
												"id": 312,
												"nodeType": "Return",
												"src": "4879:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 301,
											"modifierName": {
												"argumentTypes": null,
												"id": 300,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "4813:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4813:9:0"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "4790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4789:16:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 314,
												"src": "4832:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4831:6:0"
									},
									"scope": 557,
									"src": "4776:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "4984:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 326,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5010:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_burnFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "4991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4991:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "4991:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5031:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 324,
												"id": 331,
												"nodeType": "Return",
												"src": "5024:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "79cc6790",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 321,
											"modifierName": {
												"argumentTypes": null,
												"id": 320,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "4959:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4959:9:0"
										}
									],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 333,
												"src": "4919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 333,
												"src": "4936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4918:33:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 333,
												"src": "4978:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4977:6:0"
									},
									"scope": 557,
									"src": "4901:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "5822:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5855:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5847:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5847:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5847:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5837:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5859:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "5829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "5829:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 353,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "5914:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5935:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5927:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5927:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5927:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5914:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5939:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "5906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "5906:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 362,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "5986:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 364,
														"indexExpression": {
															"argumentTypes": null,
															"id": 363,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5996:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5986:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "6028:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6036:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 365,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6006:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 366,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6016:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6006:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 739,
															"src": "6006:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6006:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5986:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5986:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 374,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "6084:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"argumentTypes": null,
															"id": 375,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6094:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6084:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "6132:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6107:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "6117:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6107:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "6107:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6107:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6084:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "6084:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "6160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 387,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6168:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "6179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6151:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "EmitStatement",
												"src": "6146:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 392,
												"src": "5762:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 392,
												"src": "5778:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 392,
												"src": "5797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5761:51:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5822:0:0"
									},
									"scope": 557,
									"src": "5743:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "6510:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 400,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "6525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6525:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "6517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6517:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "6517:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 409,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "6591:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 412,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "6623:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 410,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "6606:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "6606:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6606:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6591:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "6591:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 416,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "6637:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 418,
														"indexExpression": {
															"argumentTypes": null,
															"id": 417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6637:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "6681:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "6658:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 421,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6668:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6658:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 696,
															"src": "6658:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6658:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6637:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "6637:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6717:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6709:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 432,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 433,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6730:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6700:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "EmitStatement",
												"src": "6695:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "6468:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 437,
												"src": "6485:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6467:33:0"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6510:0:0"
									},
									"scope": 557,
									"src": "6453:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "7108:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "7123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7142:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7134:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7134:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7134:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7123:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7146:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "7115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7115:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "7115:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "7191:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 456,
														"indexExpression": {
															"argumentTypes": null,
															"id": 455,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7191:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 461,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "7235:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7243:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 457,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7212:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 459,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 458,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "7222:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7212:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 739,
															"src": "7212:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7212:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7191:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "7191:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 466,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "7287:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 469,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "7319:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 467,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "7302:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 712,
															"src": "7302:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7302:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7287:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "7287:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7364:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7356:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7356:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "7338:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7338:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7333:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "7066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "7083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7065:33:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:0"
									},
									"scope": 557,
									"src": "7051:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "7868:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 493,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "7883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7900:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7892:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 494,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7892:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7892:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7883:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7904:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "7875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7875:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "7875:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 503,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "7958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7977:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7969:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 504,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7969:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7969:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7958:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7981:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "7950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7950:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "7950:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "8027:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 515,
															"indexExpression": {
																"argumentTypes": null,
																"id": 513,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8039:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8027:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 516,
														"indexExpression": {
															"argumentTypes": null,
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "8046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8027:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 517,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "8057:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8027:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "8027:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 521,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "8084:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 522,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "8091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "8100:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "8075:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8075:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "EmitStatement",
												"src": "8070:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "7811:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "7826:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 527,
												"src": "7843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7810:48:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7868:0:0"
									},
									"scope": 557,
									"src": "7793:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "8346:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8368:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8353:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "8353:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 541,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "8400:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8400:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 550,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "8453:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8461:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 543,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "8414:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 545,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 544,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "8426:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8414:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 546,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 659,
																			"src": "8435:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8435:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8414:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 739,
																"src": "8414:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8414:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "8382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8382:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "8382:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "8304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "8321:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8303:33:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8346:0:0"
									},
									"scope": 557,
									"src": "8285:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 558,
							"src": "92:8418:0"
						}
					],
					"src": "37:8475:0"
				},
				"id": 0
			},
			"camp/interface.sol": {
				"ast": {
					"absolutePath": "camp/interface.sol",
					"exportedSymbols": {
						"Context": [
							671
						],
						"IBEP20": [
							646
						],
						"Ownable": [
							966
						],
						"SafeMath": [
							856
						]
					},
					"id": 967,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 559,
							"literals": [
								"solidity",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 646,
							"linearizedBaseContracts": [
								646
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.\n返回账户余额",
									"functionSelector": "18160ddd",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:1"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 564,
												"src": "187:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "186:9:1"
									},
									"scope": 646,
									"src": "141:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.\n返回标记小数",
									"functionSelector": "313ce567",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "323:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 566,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "323:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "322:7:1"
									},
									"scope": 646,
									"src": "280:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.\n返回合约token的符号",
									"functionSelector": "95d89b41",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:1"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "461:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "460:15:1"
									},
									"scope": 646,
									"src": "420:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.\n 返回合约名称",
									"functionSelector": "06fdde03",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:1"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 579,
												"src": "593:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "593:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:15:1"
									},
									"scope": 646,
									"src": "554:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.\n获取该合约所有者的地址",
									"functionSelector": "893d20e8",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:1"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:9:1"
									},
									"scope": 646,
									"src": "708:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.\n返回指定账户地址在该合约中拥有的数量。",
									"functionSelector": "70a08231",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "923:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "922:17:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 591,
												"src": "963:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "962:9:1"
									},
									"scope": 646,
									"src": "904:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.\n\n   * 将指定的数量转账给指定的目标地址。recipient为目标地址。",
									"functionSelector": "a9059cbb",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "1294:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "1313:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1293:35:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 600,
												"src": "1347:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1347:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1346:6:1"
									},
									"scope": 646,
									"src": "1276:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.\n返回津贴享有者（spender）仍可从所有者（_owner）中提取的剩余令牌数量。默认为0\n调用{approve}或{transferFrom}时，此值会更改\n\n   ",
									"functionSelector": "dd62ed3e",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "1820:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "1836:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1819:33:1"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "1876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1875:9:1"
									},
									"scope": 646,
									"src": "1801:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.\n将指定的账户(amount)设置为津贴享有者，并设定最多提取数量。若成功则返回true\n重要提示：使用这种方法更改津贴会带来风险\n有人可能通过不幸的交易顺序使用旧的和新的津贴。\n缓解这场竞争的一个可能解决方案则是，首先将支出者的津贴减少到0，并设置为之后的期望值。参考：https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   *",
									"functionSelector": "095ea7b3",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3033:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3015:33:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 618,
												"src": "3067:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3067:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3066:6:1"
									},
									"scope": 646,
									"src": "2999:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.\n\n   * 指定发送者（sender）向接收者（recipient）转移指定数量的令牌。\n需要注意的是，即使双方或任何一方的地址值是0，仍然被视为正常转移。",
									"functionSelector": "23b872dd",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 629,
												"src": "3594:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 629,
												"src": "3610:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 629,
												"src": "3629:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3593:51:1"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 629,
												"src": "3663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3662:6:1"
									},
									"scope": 646,
									"src": "3572:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.\n该函数为事件函数（event），必须在发生’from‘向’to‘转移令牌时触发。value代表令牌数量，可以为0.\n创建新令牌的令牌契约应该在创建令牌时触发一个Transfer事件，_from地址设置为0x0。",
									"id": 637,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4105:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4127:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "4147:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4104:57:1"
									},
									"src": "4090:72:1"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.\n该函数为事件函数（event），必须在approve函数被成功调用时触发，即：将某地址设置为津贴享用者，并成功返回true。",
									"id": 645,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "4493:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "4516:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 645,
												"src": "4541:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4492:63:1"
									},
									"src": "4478:78:1"
								}
							],
							"scope": 967,
							"src": "26:4533:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5759:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 650,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:2:1"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5759:0:1"
									},
									"scope": 671,
									"src": "5735:27:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "5830:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 655,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "5844:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5844:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 654,
												"id": 657,
												"nodeType": "Return",
												"src": "5837:17:1"
											}
										]
									},
									"documentation": null,
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5787:2:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "5813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5813:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5812:17:1"
									},
									"scope": 671,
									"src": "5768:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "5923:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 664,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 997,
													"src": "5930:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$671",
														"typeString": "contract Context"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "5930:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 666,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "6067:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6067:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 663,
												"id": 668,
												"nodeType": "Return",
												"src": "6060:15:1"
											}
										]
									},
									"documentation": null,
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5883:2:1"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 670,
												"src": "5909:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5909:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5908:14:1"
									},
									"scope": 671,
									"src": "5866:215:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 967,
							"src": "5457:627:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.\n在Solidity的算术操作上添加溢出检查的包装器。\nsolid中的算术运算在溢出时自动包装。这很容易导致bug，\n因为程序员通常假设溢出会引发错误，这是高级编程语言中的标准行为。\n当操作溢出时，' SafeMath '通过恢复事务来恢复这种直觉。\n使用这个库而不是未检查的操作可以消除整个类的bug，所以建议始终使用它。",
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7401:100:1",
										"statements": [
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 695,
														"src": "7408:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7408:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "7420:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 683,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "7424:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7420:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 687,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "7440:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "7445:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7448:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7432:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7432:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 693,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 681,
													"src": "7494:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 679,
												"id": 694,
												"nodeType": "Return",
												"src": "7487:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7347:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7358:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7358:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7346:22:1"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7392:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7391:9:1"
									},
									"scope": 856,
									"src": "7334:167:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "7823:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 706,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "7841:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 707,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "7844:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7847:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 705,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															712,
															739
														],
														"referencedDeclaration": 739,
														"src": "7837:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7837:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 704,
												"id": 710,
												"nodeType": "Return",
												"src": "7830:50:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "7769:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "7780:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7768:22:1"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 712,
												"src": "7814:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7813:9:1"
									},
									"scope": 856,
									"src": "7756:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "8256:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 724,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "8271:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 725,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "8276:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8271:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 727,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8279:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "8263:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8263:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "8263:29:1"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 738,
														"src": "8299:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 730,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8299:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 732,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8311:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 733,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8315:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8311:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8299:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 736,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 731,
													"src": "8332:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 722,
												"id": 737,
												"nodeType": "Return",
												"src": "8325:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "8174:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "8185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "8196:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8196:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8173:50:1"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "8247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8246:9:1"
									},
									"scope": 856,
									"src": "8161:178:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "8637:364:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 748,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "8857:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8862:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8857:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 754,
												"nodeType": "IfStatement",
												"src": "8853:37:1",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "8865:25:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8881:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 747,
															"id": 752,
															"nodeType": "Return",
															"src": "8874:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 772,
														"src": "8898:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8898:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 760,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 757,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "8910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 758,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "8914:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8910:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8898:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "8930:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 763,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "8934:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8930:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 765,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "8939:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8930:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8942:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "8922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8922:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "8922:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 770,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 756,
													"src": "8994:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 771,
												"nodeType": "Return",
												"src": "8987:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "8583:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "8594:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8582:22:1"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "8628:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8627:9:1"
									},
									"scope": 856,
									"src": "8570:431:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "9512:59:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 783,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9530:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 784,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "9533:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9536:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 782,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															789,
															816
														],
														"referencedDeclaration": 816,
														"src": "9526:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 781,
												"id": 787,
												"nodeType": "Return",
												"src": "9519:46:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "9458:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "9469:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9469:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9457:22:1"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 789,
												"src": "9503:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9502:9:1"
									},
									"scope": 856,
									"src": "9445:126:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "10130:228:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 801,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "10208:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10212:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10208:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 804,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10215:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "10200:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10200:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "10200:28:1"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 815,
														"src": "10235:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10235:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "10247:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 810,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "10251:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10247:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10235:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 813,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "10351:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 799,
												"id": 814,
												"nodeType": "Return",
												"src": "10344:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "10048:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "10059:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "10070:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10070:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10047:50:1"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 816,
												"src": "10121:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10120:9:1"
									},
									"scope": 856,
									"src": "10035:323:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "10858:57:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10876:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 827,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10879:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10882:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 825,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															832,
															855
														],
														"referencedDeclaration": 855,
														"src": "10872:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10872:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 830,
												"nodeType": "Return",
												"src": "10865:44:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "10804:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "10815:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10815:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10803:22:1"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "10849:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10848:9:1"
									},
									"scope": 856,
									"src": "10791:124:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "11463:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 844,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "11478:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11483:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 847,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "11486:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "11470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11470:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "11470:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 850,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "11513:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 851,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "11517:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11513:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 842,
												"id": 853,
												"nodeType": "Return",
												"src": "11506:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "11381:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "11392:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11392:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "11403:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11403:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11380:50:1"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 855,
												"src": "11454:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11453:9:1"
									},
									"scope": 856,
									"src": "11368:156:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 967,
							"src": "7099:4428:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 857,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 671,
										"src": "12472:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$671",
											"typeString": "contract Context"
										}
									},
									"id": 858,
									"nodeType": "InheritanceSpecifier",
									"src": "12472:7:1"
								}
							],
							"contractDependencies": [
								671
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.\n提供基本访问控制机制的合同模块，\n有一个账户（所有者）可以被授予对特定功能的独占访问权。\n默认情况下，所有者帐户将是部署合同的帐户。稍后可以使用{transferOwnership}更改此设置。\n该模块通过继承使用。它将使修饰符“onlyOwner”可用，它可以应用于您的函数，以将它们的使用限制为所有者。",
							"fullyImplemented": true,
							"id": 966,
							"linearizedBaseContracts": [
								966,
								671
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 860,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 966,
									"src": "12485:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 859,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12485:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 866,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "12541:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12541:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "12572:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12540:57:1"
									},
									"src": "12514:84:1"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "12721:125:1",
										"statements": [
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 886,
														"src": "12728:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12728:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 871,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "12748:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12748:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12728:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 874,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "12767:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 875,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "12776:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12767:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "12767:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12826:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12818:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12818:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12818:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 883,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "12830:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 878,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "12797:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12797:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "EmitStatement",
												"src": "12792:48:1"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 887,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12709:2:1"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12721:0:1"
									},
									"scope": 966,
									"src": "12697:149:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "12966:26:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 892,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 860,
													"src": "12980:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "12973:13:1"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"functionSelector": "8da5cb5b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12933:2:1"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 895,
												"src": "12957:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12957:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12956:9:1"
									},
									"scope": 966,
									"src": "12919:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "13098:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 898,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "13113:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 899,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "13123:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13123:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13113:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13137:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "13105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13105:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "13105:67:1"
											},
											{
												"id": 905,
												"nodeType": "PlaceholderStatement",
												"src": "13179:1:1"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 907,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13095:2:1"
									},
									"src": "13077:109:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "13567:84:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 913,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "13600:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13616:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13608:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 914,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13608:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13608:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 912,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "13579:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13579:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "EmitStatement",
												"src": "13574:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 920,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "13626:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13643:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 921,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13635:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13635:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13626:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "13626:19:1"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"functionSelector": "715018a6",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 910,
											"modifierName": {
												"argumentTypes": null,
												"id": 909,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "13557:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13557:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13547:2:1"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13567:0:1"
									},
									"scope": 966,
									"src": "13521:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "13858:41:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 936,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "13884:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "13865:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13865:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "13865:28:1"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"functionSelector": "f2fde38b",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 933,
											"modifierName": {
												"argumentTypes": null,
												"id": 932,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "13848:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13848:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 940,
												"src": "13823:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13823:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13822:18:1"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13858:0:1"
									},
									"scope": 966,
									"src": "13796:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "14052:160:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 946,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "14067:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14087:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14079:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14079:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14079:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "14067:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14091:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															984,
															985
														],
														"referencedDeclaration": 985,
														"src": "14059:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14059:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "14059:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 956,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "14165:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 957,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "14173:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 955,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "14144:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14144:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "EmitStatement",
												"src": "14139:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 960,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "14189:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 961,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "14198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14189:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "14189:17:1"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 965,
												"src": "14025:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14024:18:1"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14052:0:1"
									},
									"scope": 966,
									"src": "13997:215:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 967,
							"src": "12452:1763:1"
						}
					],
					"src": "0:14221:1"
				},
				"id": 1
			}
		}
	}
}