{
	"id": "6504cf93c5d37b29792cd66084c81ab5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"013_修饰器继承.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract Base1 {\r\n    modifier exactDividedBy2And3(uint _a) virtual {\r\n        require(_a % 2 == 0 && _a % 3 == 0);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Identifier is Base1 {\r\n\r\n\r\n    modifier exactDividedBy2And3(uint _a) override {\r\n        _;\r\n        require(_a % 2 == 0 && _a % 3 == 0);\r\n    }\r\n\r\n    //计算一个数分别被2除和被3除的值\r\n    function getExactDividedBy2And3WithoutModifier(uint _dividend) public pure returns(uint, uint){\r\n        uint div2 = _dividend / 2;\r\n        uint div3 = _dividend / 3;\r\n        return (div2, div3);\r\n    }\r\n    \r\n    //计算一个数分别被2除和被3除的值，但是传入的参数必须是2和3的倍数\r\n    function getExactDividedBy2And3(uint _dividend) public exactDividedBy2And3(_dividend) pure returns(uint, uint) {\r\n        return getExactDividedBy2And3WithoutModifier(_dividend);\r\n    }\r\n\r\n\r\n}\r\n\r\n    \r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"013_修饰器继承.sol": {
				"Base1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":66:203  contract Base1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":66:203  contract Base1 {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f4125386887e5c63e281f400cce23dac8ba29ef5b55bb71bca815fd39c5ee1c64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205f4125386887e5c63e281f400cce23dac8ba29ef5b55bb71bca815fd39c5ee1c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F COINBASE 0x25 CODESIZE PUSH9 0x87E5C63E281F400CCE 0x23 0xDA 0xC8 0xBA 0x29 0xEF JUMPDEST SSTORE 0xBB PUSH18 0xBCA815FD39C5EE1C64736F6C634300081200 CALLER ",
							"sourceMap": "66:137:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205f4125386887e5c63e281f400cce23dac8ba29ef5b55bb71bca815fd39c5ee1c64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F COINBASE 0x25 CODESIZE PUSH9 0x87E5C63E281F400CCE 0x23 0xDA 0xC8 0xBA 0x29 0xEF JUMPDEST SSTORE 0xBB PUSH18 0xBCA815FD39C5EE1C64736F6C634300081200 CALLER ",
							"sourceMap": "66:137:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 203,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 203,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f4125386887e5c63e281f400cce23dac8ba29ef5b55bb71bca815fd39c5ee1c64736f6c63430008120033",
									".code": [
										{
											"begin": 66,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 203,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"013_修饰器继承.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"013_\\u4fee\\u9970\\u5668\\u7ee7\\u627f.sol\":\"Base1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"013_\\u4fee\\u9970\\u5668\\u7ee7\\u627f.sol\":{\"keccak256\":\"0x88bb2f0e94ff9f2e4d3bdc743390478992e5da724ca5cf4fe5ef8fd9551c80f0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7cf4839816685c0cddfd725ad8df18d29da08e788d86dcc6d95f1cb35de3df6a\",\"dweb:/ipfs/QmXnseHMKPToGc94MGSNaC6TCeDmUDMawQkYVJnR8pLEB3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Identifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_dividend",
									"type": "uint256"
								}
							],
							"name": "getExactDividedBy2And3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_dividend",
									"type": "uint256"
								}
							],
							"name": "getExactDividedBy2And3WithoutModifier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":207:927  contract Identifier is Base1 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":207:927  contract Identifier is Base1 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4534a438\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd2406c78\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":735:920  function getExactDividedBy2And3(uint _dividend) public exactDividedBy2And3(_dividend) pure returns(uint, uint) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":420:624  function getExactDividedBy2And3WithoutModifier(uint _dividend) public pure returns(uint, uint){... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":735:920  function getExactDividedBy2And3(uint _dividend) public exactDividedBy2And3(_dividend) pure returns(uint, uint) {... */\n    tag_8:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":834:838  uint */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":840:844  uint */\n      dup1\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":810:819  _dividend */\n      dup3\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":864:912  getExactDividedBy2And3WithoutModifier(_dividend) */\n      tag_17\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":902:911  _dividend */\n      dup5\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":864:901  getExactDividedBy2And3WithoutModifier */\n      tag_13\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":864:912  getExactDividedBy2And3WithoutModifier(_dividend) */\n      jump\t// in\n    tag_17:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":857:912  return getExactDividedBy2And3WithoutModifier(_dividend) */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":335:336  0 */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":330:331  2 */\n      0x02\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":325:327  _a */\n      dup3\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":325:331  _a % 2 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":325:336  _a % 2 == 0 */\n      eq\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":325:351  _a % 2 == 0 && _a % 3 == 0 */\n      dup1\n      iszero\n      tag_20\n      jumpi\n      pop\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":350:351  0 */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":345:346  3 */\n      0x03\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":340:342  _a */\n      dup3\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":340:346  _a % 3 */\n      tag_21\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_21:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":340:351  _a % 3 == 0 */\n      eq\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":325:351  _a % 2 == 0 && _a % 3 == 0 */\n    tag_20:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":317:352  require(_a % 2 == 0 && _a % 3 == 0) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":735:920  function getExactDividedBy2And3(uint _dividend) public exactDividedBy2And3(_dividend) pure returns(uint, uint) {... */\n      pop\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":420:624  function getExactDividedBy2And3WithoutModifier(uint _dividend) public pure returns(uint, uint){... */\n    tag_13:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":503:507  uint */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":509:513  uint */\n      dup1\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":525:534  uint div2 */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":549:550  2 */\n      0x02\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":537:546  _dividend */\n      dup5\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":537:550  _dividend / 2 */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":525:550  uint div2 = _dividend / 2 */\n      swap1\n      pop\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":561:570  uint div3 */\n      0x00\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":585:586  3 */\n      0x03\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":573:582  _dividend */\n      dup6\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":573:586  _dividend / 3 */\n      tag_26\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_26:\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":561:586  uint div3 = _dividend / 3 */\n      swap1\n      pop\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":605:609  div2 */\n      dup2\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":611:615  div3 */\n      dup2\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":597:616  return (div2, div3) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"013_\\xe4\\xbf\\xae\\xe9\\xa5\\xb0\\xe5\\x99\\xa8\\xe7\\xbb\\xa7\\xe6\\x89\\xbf.sol\":420:624  function getExactDividedBy2And3WithoutModifier(uint _dividend) public pure returns(uint, uint){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_30:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_31:\n        /* \"#utility.yul\":490:514   */\n      tag_42\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_43:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_32:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_45\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_48\n      tag_28\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":766:885   */\n    tag_47:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_49\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_32\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_33:\n        /* \"#utility.yul\":1112:1136   */\n      tag_51\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_30\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1481   */\n    tag_10:\n        /* \"#utility.yul\":1270:1274   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1297:1306   */\n      dup3\n        /* \"#utility.yul\":1293:1311   */\n      add\n        /* \"#utility.yul\":1285:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1392   */\n      tag_53\n        /* \"#utility.yul\":1389:1390   */\n      0x00\n        /* \"#utility.yul\":1378:1387   */\n      dup4\n        /* \"#utility.yul\":1374:1391   */\n      add\n        /* \"#utility.yul\":1365:1371   */\n      dup6\n        /* \"#utility.yul\":1321:1392   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1402:1474   */\n      tag_54\n        /* \"#utility.yul\":1470:1472   */\n      0x20\n        /* \"#utility.yul\":1459:1468   */\n      dup4\n        /* \"#utility.yul\":1455:1473   */\n      add\n        /* \"#utility.yul\":1446:1452   */\n      dup5\n        /* \"#utility.yul\":1402:1474   */\n      tag_33\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1149:1481   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1667   */\n    tag_34:\n        /* \"#utility.yul\":1535:1612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1532:1533   */\n      0x00\n        /* \"#utility.yul\":1525:1613   */\n      mstore\n        /* \"#utility.yul\":1632:1636   */\n      0x12\n        /* \"#utility.yul\":1629:1630   */\n      0x04\n        /* \"#utility.yul\":1622:1637   */\n      mstore\n        /* \"#utility.yul\":1656:1660   */\n      0x24\n        /* \"#utility.yul\":1653:1654   */\n      0x00\n        /* \"#utility.yul\":1646:1661   */\n      revert\n        /* \"#utility.yul\":1673:1849   */\n    tag_19:\n        /* \"#utility.yul\":1705:1706   */\n      0x00\n        /* \"#utility.yul\":1722:1742   */\n      tag_57\n        /* \"#utility.yul\":1740:1741   */\n      dup3\n        /* \"#utility.yul\":1722:1742   */\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1717:1742   */\n      swap2\n      pop\n        /* \"#utility.yul\":1756:1776   */\n      tag_58\n        /* \"#utility.yul\":1774:1775   */\n      dup4\n        /* \"#utility.yul\":1756:1776   */\n      tag_30\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1751:1776   */\n      swap3\n      pop\n        /* \"#utility.yul\":1795:1796   */\n      dup3\n        /* \"#utility.yul\":1785:1820   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1800:1818   */\n      tag_60\n      tag_34\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1785:1820   */\n    tag_59:\n        /* \"#utility.yul\":1841:1842   */\n      dup3\n        /* \"#utility.yul\":1838:1839   */\n      dup3\n        /* \"#utility.yul\":1834:1843   */\n      mod\n        /* \"#utility.yul\":1829:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1673:1849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2226   */\n    tag_25:\n        /* \"#utility.yul\":2081:2082   */\n      0x00\n        /* \"#utility.yul\":2098:2118   */\n      tag_63\n        /* \"#utility.yul\":2116:2117   */\n      dup3\n        /* \"#utility.yul\":2098:2118   */\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2093:2118   */\n      swap2\n      pop\n        /* \"#utility.yul\":2132:2152   */\n      tag_64\n        /* \"#utility.yul\":2150:2151   */\n      dup4\n        /* \"#utility.yul\":2132:2152   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2127:2152   */\n      swap3\n      pop\n        /* \"#utility.yul\":2171:2172   */\n      dup3\n        /* \"#utility.yul\":2161:2196   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2176:2194   */\n      tag_66\n      tag_34\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2161:2196   */\n    tag_65:\n        /* \"#utility.yul\":2218:2219   */\n      dup3\n        /* \"#utility.yul\":2215:2216   */\n      dup3\n        /* \"#utility.yul\":2211:2220   */\n      div\n        /* \"#utility.yul\":2206:2220   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c31e3efdd30fc2d16e54f63c550a1efba95b1303e3a673264e7ca11398df341464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061027e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634534a4381461003b578063d2406c781461006c575b600080fd5b61005560048036038101906100509190610152565b61009d565b60405161006392919061018e565b60405180910390f35b61008660048036038101906100819190610152565b6100e5565b60405161009492919061018e565b60405180910390f35b600080826100aa846100e5565b9250925060006002826100bd91906101e6565b1480156100d6575060006003826100d491906101e6565b145b6100df57600080fd5b50915091565b60008060006002846100f79190610217565b905060006003856101089190610217565b90508181935093505050915091565b600080fd5b6000819050919050565b61012f8161011c565b811461013a57600080fd5b50565b60008135905061014c81610126565b92915050565b60006020828403121561016857610167610117565b5b60006101768482850161013d565b91505092915050565b6101888161011c565b82525050565b60006040820190506101a3600083018561017f565b6101b0602083018461017f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006101f18261011c565b91506101fc8361011c565b92508261020c5761020b6101b7565b5b828206905092915050565b60006102228261011c565b915061022d8361011c565b92508261023d5761023c6101b7565b5b82820490509291505056fea2646970667358221220c31e3efdd30fc2d16e54f63c550a1efba95b1303e3a673264e7ca11398df341464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4534A438 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD2406C78 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x152 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x152 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0xAA DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0xD6 JUMPI POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP6 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11C JUMP JUMPDEST DUP2 EQ PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH2 0x167 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176 DUP5 DUP3 DUP6 ADD PUSH2 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188 DUP2 PUSH2 0x11C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x1B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F1 DUP3 PUSH2 0x11C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC DUP4 PUSH2 0x11C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C JUMPI PUSH2 0x20B PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x11C JUMP JUMPDEST SWAP2 POP PUSH2 0x22D DUP4 PUSH2 0x11C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x1E RETURNDATACOPY REVERT 0xD3 0xF 0xC2 0xD1 PUSH15 0x54F63C550A1EFBA95B1303E3A67326 0x4E PUSH29 0xA11398DF341464736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "207:720:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getExactDividedBy2And3WithoutModifier_71": {
									"entryPoint": 229,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getExactDividedBy2And3_88": {
									"entryPoint": 157,
									"id": 88,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2229:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1275:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1285:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1285:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1365:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1389:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1321:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1321:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1470:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1402:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1402:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1239:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1251:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1259:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1270:4:1",
														"type": ""
													}
												],
												"src": "1149:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1535:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1487:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1707:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1717:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1740:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1722:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1717:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1751:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1774:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1756:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1751:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1798:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1800:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1795:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:9:1"
															},
															"nodeType": "YulIf",
															"src": "1785:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1829:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1838:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1841:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1829:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1696:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1699:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1705:1:1",
														"type": ""
													}
												],
												"src": "1673:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1883:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1900:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1903:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1893:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2014:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1855:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2083:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2093:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2098:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2093:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2127:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2150:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2132:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2127:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2174:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2176:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2176:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2171:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:9:1"
															},
															"nodeType": "YulIf",
															"src": "2161:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2206:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2215:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2218:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2206:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2072:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2075:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2081:1:1",
														"type": ""
													}
												],
												"src": "2041:185:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80634534a4381461003b578063d2406c781461006c575b600080fd5b61005560048036038101906100509190610152565b61009d565b60405161006392919061018e565b60405180910390f35b61008660048036038101906100819190610152565b6100e5565b60405161009492919061018e565b60405180910390f35b600080826100aa846100e5565b9250925060006002826100bd91906101e6565b1480156100d6575060006003826100d491906101e6565b145b6100df57600080fd5b50915091565b60008060006002846100f79190610217565b905060006003856101089190610217565b90508181935093505050915091565b600080fd5b6000819050919050565b61012f8161011c565b811461013a57600080fd5b50565b60008135905061014c81610126565b92915050565b60006020828403121561016857610167610117565b5b60006101768482850161013d565b91505092915050565b6101888161011c565b82525050565b60006040820190506101a3600083018561017f565b6101b0602083018461017f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006101f18261011c565b91506101fc8361011c565b92508261020c5761020b6101b7565b5b828206905092915050565b60006102228261011c565b915061022d8361011c565b92508261023d5761023c6101b7565b5b82820490509291505056fea2646970667358221220c31e3efdd30fc2d16e54f63c550a1efba95b1303e3a673264e7ca11398df341464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4534A438 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD2406C78 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x152 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x152 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP3 SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0xAA DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0xD6 JUMPI POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x1E6 JUMP JUMPDEST EQ JUMPDEST PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP6 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11C JUMP JUMPDEST DUP2 EQ PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168 JUMPI PUSH2 0x167 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176 DUP5 DUP3 DUP6 ADD PUSH2 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x188 DUP2 PUSH2 0x11C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F JUMP JUMPDEST PUSH2 0x1B0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F1 DUP3 PUSH2 0x11C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC DUP4 PUSH2 0x11C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20C JUMPI PUSH2 0x20B PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x11C JUMP JUMPDEST SWAP2 POP PUSH2 0x22D DUP4 PUSH2 0x11C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23D JUMPI PUSH2 0x23C PUSH2 0x1B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x1E RETURNDATACOPY REVERT 0xD3 0xF 0xC2 0xD1 PUSH15 0x54F63C550A1EFBA95B1303E3A67326 0x4E PUSH29 0xA11398DF341464736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "207:720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;420:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;735:185;834:4;840;810:9;864:48:::1;902:9;864:37;:48::i;:::-;857:55;;;;335:1:::0;330;325:2;:6;;;;:::i;:::-;:11;:26;;;;;350:1;345;340:2;:6;;;;:::i;:::-;:11;325:26;317:35;;;;;;735:185;;;;:::o;420:204::-;503:4;509;525:9;549:1;537:9;:13;;;;:::i;:::-;525:25;;561:9;585:1;573:9;:13;;;;:::i;:::-;561:25;;605:4;611;597:19;;;;;;420:204;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:332::-;1270:4;1308:2;1297:9;1293:18;1285:26;;1321:71;1389:1;1378:9;1374:17;1365:6;1321:71;:::i;:::-;1402:72;1470:2;1459:9;1455:18;1446:6;1402:72;:::i;:::-;1149:332;;;;;:::o;1487:180::-;1535:77;1532:1;1525:88;1632:4;1629:1;1622:15;1656:4;1653:1;1646:15;1673:176;1705:1;1722:20;1740:1;1722:20;:::i;:::-;1717:25;;1756:20;1774:1;1756:20;:::i;:::-;1751:25;;1795:1;1785:35;;1800:18;;:::i;:::-;1785:35;1841:1;1838;1834:9;1829:14;;1673:176;;;;:::o;2041:185::-;2081:1;2098:20;2116:1;2098:20;:::i;:::-;2093:25;;2132:20;2150:1;2132:20;:::i;:::-;2127:25;;2171:1;2161:35;;2176:18;;:::i;:::-;2161:35;2218:1;2215;2211:9;2206:14;;2041:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "127600",
								"executionCost": "171",
								"totalCost": "127771"
							},
							"external": {
								"getExactDividedBy2And3(uint256)": "infinite",
								"getExactDividedBy2And3WithoutModifier(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 207,
									"end": 927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 207,
									"end": 927,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c31e3efdd30fc2d16e54f63c550a1efba95b1303e3a673264e7ca11398df341464736f6c63430008120033",
									".code": [
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "4534A438"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "D2406C78"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 735,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 735,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 735,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 420,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 420,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 735,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 864,
											"end": 912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 902,
											"end": 911,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 864,
											"end": 901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 864,
											"end": 912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 864,
											"end": 912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 864,
											"end": 912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 912,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 857,
											"end": 912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 912,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 857,
											"end": 912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 325,
											"end": 327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 325,
											"end": 331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 325,
											"end": 331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 325,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 340,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 340,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 340,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 340,
											"end": 346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 340,
											"end": 346,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 351,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 503,
											"end": 507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 537,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 537,
											"end": 550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 537,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 537,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 537,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 550,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 537,
											"end": 550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 573,
											"end": 582,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 573,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 586,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 611,
											"end": 615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 597,
											"end": 616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 420,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1389,
											"end": 1390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1371,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1321,
											"end": 1392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1321,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1402,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1402,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1667,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1487,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1612,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1653,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1661,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1722,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1722,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1756,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1756,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1776,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1800,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1800,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1785,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2098,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2132,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2152,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2176,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"013_修饰器继承.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getExactDividedBy2And3(uint256)": "4534a438",
							"getExactDividedBy2And3WithoutModifier(uint256)": "d2406c78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dividend\",\"type\":\"uint256\"}],\"name\":\"getExactDividedBy2And3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dividend\",\"type\":\"uint256\"}],\"name\":\"getExactDividedBy2And3WithoutModifier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"013_\\u4fee\\u9970\\u5668\\u7ee7\\u627f.sol\":\"Identifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"013_\\u4fee\\u9970\\u5668\\u7ee7\\u627f.sol\":{\"keccak256\":\"0x88bb2f0e94ff9f2e4d3bdc743390478992e5da724ca5cf4fe5ef8fd9551c80f0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7cf4839816685c0cddfd725ad8df18d29da08e788d86dcc6d95f1cb35de3df6a\",\"dweb:/ipfs/QmXnseHMKPToGc94MGSNaC6TCeDmUDMawQkYVJnR8pLEB3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"013_修饰器继承.sol": {
				"ast": {
					"absolutePath": "013_修饰器继承.sol",
					"exportedSymbols": {
						"Base1": [
							22
						],
						"Identifier": [
							89
						]
					},
					"id": 90,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Base1",
							"nameLocation": "75:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "134:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 8,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 6,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "153:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 7,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "158:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "153:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 9,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "163:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "153:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 11,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "168:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 12,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "168:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "178:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "168:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "153:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "145:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "145:35:0"
											},
											{
												"id": 19,
												"nodeType": "PlaceholderStatement",
												"src": "191:1:0"
											}
										]
									},
									"id": 21,
									"name": "exactDividedBy2And3",
									"nameLocation": "97:19:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "122:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:9:0"
									},
									"src": "88:112:0",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 90,
							"src": "66:137:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "Base1",
										"nameLocations": [
											"230:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 22,
										"src": "230:5:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "230:5:0"
								}
							],
							"canonicalName": "Identifier",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89,
								22
							],
							"name": "Identifier",
							"nameLocation": "216:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseModifiers": [
										21
									],
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "294:66:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "305:1:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 31,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "325:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "330:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "325:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "335:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "325:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 36,
																		"name": "_a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "340:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "345:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "340:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "340:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "325:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "317:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "317:35:0"
											}
										]
									},
									"id": 45,
									"name": "exactDividedBy2And3",
									"nameLocation": "256:19:0",
									"nodeType": "ModifierDefinition",
									"overrides": {
										"id": 28,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "285:8:0"
									},
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "281:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:0"
									},
									"src": "247:113:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "514:110:0",
										"statements": [
											{
												"assignments": [
													55
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"mutability": "mutable",
														"name": "div2",
														"nameLocation": "530:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "525:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 54,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "525:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 56,
														"name": "_dividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "537:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "537:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "525:25:0"
											},
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "div3",
														"nameLocation": "566:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "561:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "_dividend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "573:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "585:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "573:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "561:25:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 66,
															"name": "div2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "605:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 67,
															"name": "div3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 68,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "604:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 53,
												"id": 69,
												"nodeType": "Return",
												"src": "597:19:0"
											}
										]
									},
									"functionSelector": "d2406c78",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExactDividedBy2And3WithoutModifier",
									"nameLocation": "429:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_dividend",
												"nameLocation": "472:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:16:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:12:0"
									},
									"scope": 89,
									"src": "420:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "846:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"name": "_dividend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "902:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 83,
														"name": "getExactDividedBy2And3WithoutModifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "864:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 82,
												"id": 86,
												"nodeType": "Return",
												"src": "857:55:0"
											}
										]
									},
									"functionSelector": "4534a438",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 76,
													"name": "_dividend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "810:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 75,
												"name": "exactDividedBy2And3",
												"nameLocations": [
													"790:19:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "790:19:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "790:30:0"
										}
									],
									"name": "getExactDividedBy2And3",
									"nameLocation": "744:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_dividend",
												"nameLocation": "772:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "767:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:16:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "834:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "834:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "840:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:12:0"
									},
									"scope": 89,
									"src": "735:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 90,
							"src": "207:720:0",
							"usedErrors": []
						}
					],
					"src": "39:902:0"
				},
				"id": 0
			}
		}
	}
}